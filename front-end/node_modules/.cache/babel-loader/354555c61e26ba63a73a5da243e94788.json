{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\"; // @inheritedComponent ListItem\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { componentPropType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: _extends({}, theme.typography.subheading, {\n    height: 24,\n    boxSizing: 'content-box',\n    width: 'auto',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    '&$selected': {}\n  }),\n\n  /* Styles applied to the root element if `disableGutters={false}`. */\n  gutters: {\n    paddingLeft: 16,\n    paddingRight: 16\n  },\n\n  /* Styles applied to the root element if `selected={true}`. */\n  selected: {}\n});\n\nfunction MenuItem(props) {\n  const classes = props.classes,\n        className = props.className,\n        component = props.component,\n        disableGutters = props.disableGutters,\n        role = props.role,\n        selected = props.selected,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"role\", \"selected\"]);\n\n  return React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: -1,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    className: classNames(classes.root, {\n      [classes.selected]: selected,\n      [classes.gutters]: !disableGutters\n    }, className)\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  /**\n   * Menu item contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: componentPropType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool\n} : void 0;\nMenuItem.defaultProps = {\n  component: 'li',\n  disableGutters: false,\n  role: 'menuitem'\n};\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","map":null,"metadata":{},"sourceType":"module"}