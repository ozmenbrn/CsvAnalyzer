{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '../styles/withStyles';\nimport { capitalize } from '../utils/helpers';\nimport { isHorizontal } from '../Drawer/Drawer';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    zIndex: theme.zIndex.drawer - 1\n  },\n  anchorLeft: {\n    right: 'auto'\n  },\n  anchorRight: {\n    left: 'auto',\n    right: 0\n  },\n  anchorTop: {\n    bottom: 'auto',\n    right: 0\n  },\n  anchorBottom: {\n    top: 'auto',\n    bottom: 0,\n    right: 0\n  }\n});\n/**\n * @ignore - internal component.\n */\n\nconst SwipeArea = React.forwardRef((props, ref) => {\n  const anchor = props.anchor,\n        classes = props.classes,\n        className = props.className,\n        width = props.width,\n        other = _objectWithoutPropertiesLoose(props, [\"anchor\", \"classes\", \"className\", \"width\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: classNames(classes.root, classes[\"anchor\".concat(capitalize(anchor))], className),\n    style: {\n      [isHorizontal(props) ? 'width' : 'height']: width\n    },\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeArea.propTypes = {\n  /**\n   * Side on which to attach the discovery area.\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']).isRequired,\n\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The width of the left most (or right most) area in pixels where the\n   * drawer can be swiped open from.\n   */\n  width: PropTypes.number.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPrivateSwipeArea'\n})(SwipeArea);","map":null,"metadata":{},"sourceType":"module"}