{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport EventListener from 'react-event-listener';\nimport debounce from 'debounce'; // < 1kb payload overhead when lodash/debounce is > 3kb.\n\nconst styles = {\n  width: 90,\n  height: 90,\n  position: 'absolute',\n  top: -9000,\n  overflow: 'scroll',\n  // Support IE 11\n  msOverflowStyle: 'scrollbar'\n};\n/**\n * @ignore - internal component.\n * The component is originates from https://github.com/STORIS/react-scrollbar-size.\n * It has been moved into the core in order to minimize the bundle size.\n */\n\nclass ScrollbarSize extends React.Component {\n  constructor() {\n    super();\n\n    this.handleRef = ref => {\n      this.nodeRef = ref;\n    };\n\n    this.setMeasurements = () => {\n      const nodeRef = this.nodeRef;\n\n      if (!nodeRef) {\n        return;\n      }\n\n      this.scrollbarHeight = nodeRef.offsetHeight - nodeRef.clientHeight;\n    };\n\n    if (typeof window !== 'undefined') {\n      this.handleResize = debounce(() => {\n        const prevHeight = this.scrollbarHeight;\n        this.setMeasurements();\n\n        if (prevHeight !== this.scrollbarHeight) {\n          this.props.onChange(this.scrollbarHeight);\n        }\n      }, 166); // Corresponds to 10 frames at 60 Hz.\n    }\n  }\n\n  componentDidMount() {\n    this.setMeasurements();\n    this.props.onChange(this.scrollbarHeight);\n  }\n\n  componentWillUnmount() {\n    this.handleResize.clear();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(EventListener, {\n      target: \"window\",\n      onResize: this.handleResize\n    }), React.createElement(\"div\", {\n      style: styles,\n      ref: this.handleRef\n    }));\n  }\n\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ScrollbarSize.propTypes = {\n  onChange: PropTypes.func.isRequired\n} : void 0;\nexport default ScrollbarSize;","map":null,"metadata":{},"sourceType":"module"}