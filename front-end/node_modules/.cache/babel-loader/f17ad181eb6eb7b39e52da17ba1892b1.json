{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '../styles/withStyles';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nfunction FormGroup(props) {\n  const classes = props.classes,\n        className = props.className,\n        children = props.children,\n        row = props.row,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"children\", \"row\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: classNames(classes.root, {\n      [classes.row]: row\n    }, className)\n  }, other), children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   */\n  row: PropTypes.bool\n} : void 0;\nFormGroup.defaultProps = {\n  row: false\n};\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);","map":null,"metadata":{},"sourceType":"module"}