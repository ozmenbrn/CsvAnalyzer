{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Transition from 'react-transition-group/Transition';\n/**\n * @ignore - internal component.\n */\n\nclass Ripple extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      visible: false,\n      leaving: false\n    };\n\n    this.handleEnter = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleExit = () => {\n      this.setState({\n        leaving: true\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          classNameProp = _this$props.className,\n          pulsate = _this$props.pulsate,\n          rippleX = _this$props.rippleX,\n          rippleY = _this$props.rippleY,\n          rippleSize = _this$props.rippleSize,\n          other = _objectWithoutPropertiesLoose(_this$props, [\"classes\", \"className\", \"pulsate\", \"rippleX\", \"rippleY\", \"rippleSize\"]);\n\n    const _this$state = this.state,\n          visible = _this$state.visible,\n          leaving = _this$state.leaving;\n    const rippleClassName = classNames(classes.ripple, {\n      [classes.rippleVisible]: visible,\n      [classes.ripplePulsate]: pulsate\n    }, classNameProp);\n    const rippleStyles = {\n      width: rippleSize,\n      height: rippleSize,\n      top: -(rippleSize / 2) + rippleY,\n      left: -(rippleSize / 2) + rippleX\n    };\n    const childClassName = classNames(classes.child, {\n      [classes.childLeaving]: leaving,\n      [classes.childPulsate]: pulsate\n    });\n    return React.createElement(Transition, _extends({\n      onEnter: this.handleEnter,\n      onExit: this.handleExit\n    }, other), React.createElement(\"span\", {\n      className: rippleClassName,\n      style: rippleStyles\n    }, React.createElement(\"span\", {\n      className: childClassName\n    })));\n  }\n\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Ripple.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.\n   */\n  pulsate: PropTypes.bool,\n\n  /**\n   * Diameter of the ripple.\n   */\n  rippleSize: PropTypes.number,\n\n  /**\n   * Horizontal position of the ripple center.\n   */\n  rippleX: PropTypes.number,\n\n  /**\n   * Vertical position of the ripple center.\n   */\n  rippleY: PropTypes.number\n} : void 0;\nRipple.defaultProps = {\n  pulsate: false\n};\nexport default Ripple;","map":null,"metadata":{},"sourceType":"module"}