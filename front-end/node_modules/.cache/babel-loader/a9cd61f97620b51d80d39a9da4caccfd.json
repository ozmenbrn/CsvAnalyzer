{"ast":null,"code":"var _jsxFileName = \"/Users/barinozmen/CsvAnalyzer/front-end/src/components/Csv.js\";\nimport React, { Component } from \"react\"; // Import React Table\n\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport { Grid } from \"@material-ui/core/es\";\nimport uploadIcon from \"../assets/images/upload.png\";\nimport downloadIcon from \"../assets/images/download.png\";\nimport deleteIcon from \"../assets/images/delete.jpg\";\nimport { CSVLink } from \"react-csv\";\nlet selectTable;\n\nclass Csv extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      showMenu: false,\n      filterMethodString: props.filterMethodString,\n      filterMethod: props.filterMethod,\n      downloadData: [],\n      changeFilterMethod: props.changeFilterMethod,\n      filtered: []\n    };\n  }\n\n  showMenu(showMenu) {\n    this.setState({\n      showMenu: !showMenu\n    });\n  }\n\n  selectFilter(i, filterMethodString) {\n    const _this$state = this.state,\n          changeFilterMethod = _this$state.changeFilterMethod,\n          filtered = _this$state.filtered;\n    this.setState({\n      showMenu: false,\n      filterMethodString: filterMethodString,\n      filterMethod: i\n    });\n    changeFilterMethod(i, filterMethodString, filtered);\n  }\n\n  uploadCsv() {\n    const _this$props = this.props,\n          putDataToDB = _this$props.putDataToDB,\n          csvData = _this$props.csvData,\n          csvHeader = _this$props.csvHeader,\n          csvName = _this$props.csvName;\n    var name = prompt(\"Please enter name for csv\");\n    putDataToDB(name, csvData, csvHeader);\n  }\n\n  deleteCsv() {\n    const deleteFromDB = this.props.deleteFromDB;\n    deleteFromDB();\n  }\n\n  downloadCsv() {\n    const _this$props2 = this.props,\n          csvData = _this$props2.csvData,\n          csvHeader = _this$props2.csvHeader;\n    let downloadedData = [];\n    let header = [];\n\n    for (let j = 0; j < csvHeader.length; j++) {\n      header.push(csvHeader[j].Header);\n    }\n\n    downloadedData.push(header);\n\n    for (let i = 0; i < csvData.length; i++) {\n      let body = [];\n\n      for (let j = 0; j < csvHeader.length; j++) {\n        let columnName = csvHeader[j].Header;\n        body.push(csvData[i][columnName]);\n      }\n\n      downloadedData.push(body);\n    }\n\n    this.setState({\n      downloadData: downloadedData\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          showMenu = _this$state2.showMenu,\n          filterMethodString = _this$state2.filterMethodString,\n          downloadData = _this$state2.downloadData,\n          filtered = _this$state2.filtered;\n    const _this$props3 = this.props,\n          csvData = _this$props3.csvData,\n          csvHeader = _this$props3.csvHeader;\n\n    if (!csvData) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      });\n    } //  const currentRecords = this.selectTable.getResolvedState().sortedData;\n    // console.log(currentRecords);\n\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.showMenu(showMenu),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Filter Method\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \" \", filterMethodString, \" \"))), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"weFantastic\",\n      src: uploadIcon,\n      onClick: () => this.uploadCsv(),\n      style: {\n        width: \"30px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(CSVLink, {\n      data: downloadData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"weFantastic\",\n      src: downloadIcon,\n      onClick: () => this.downloadCsv(),\n      style: {\n        width: \"26px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(\"img\", {\n      alt: \"weFantastic\",\n      onClick: () => this.deleteCsv(),\n      src: deleteIcon,\n      style: {\n        width: \"22px\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }))), showMenu && React.createElement(\"div\", {\n      className: \"menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.selectFilter(0, \"Starts With\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \" \", \"Starts With\"), React.createElement(\"button\", {\n      onClick: () => this.selectFilter(1, \"Includes\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \" \", \"Includes\", \" \"), React.createElement(\"button\", {\n      onClick: () => this.selectFilter(2, \"Not Includes\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \" \", \"Not Includes\", \" \"), React.createElement(\"button\", {\n      onClick: () => this.selectFilter(3, \"Greater Than\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \" \", \"Greater Than\", \" \"), React.createElement(\"button\", {\n      onClick: () => this.selectFilter(4, \"Lower Than\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \" \", \"Lower Than\", \" \")), csvHeader && csvData && React.createElement(ReactTable, {\n      style: {\n        marginTop: \"20px\"\n      },\n      data: csvData,\n      columns: csvHeader,\n      defaultPageSize: 10,\n      className: \"-striped -highlight\",\n      onFilteredChange: filtered => this.setState({\n        filtered\n      }),\n      ref: r => {\n        this.selectTable = r;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Csv;","map":{"version":3,"sources":["/Users/barinozmen/CsvAnalyzer/front-end/src/components/Csv.js"],"names":["React","Component","ReactTable","Grid","uploadIcon","downloadIcon","deleteIcon","CSVLink","selectTable","Csv","constructor","props","state","loading","showMenu","filterMethodString","filterMethod","downloadData","changeFilterMethod","filtered","setState","selectFilter","i","uploadCsv","putDataToDB","csvData","csvHeader","csvName","name","prompt","deleteCsv","deleteFromDB","downloadCsv","downloadedData","header","j","length","push","Header","body","columnName","render","width","marginLeft","marginTop","r"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\n// Import React Table\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport { Grid } from \"@material-ui/core/es\";\nimport uploadIcon from \"../assets/images/upload.png\";\nimport downloadIcon from \"../assets/images/download.png\";\nimport deleteIcon from \"../assets/images/delete.jpg\";\nimport { CSVLink } from \"react-csv\";\n\nlet selectTable\n\nclass Csv extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      showMenu: false,\n      filterMethodString: props.filterMethodString,\n      filterMethod: props.filterMethod,\n      downloadData: [],\n      changeFilterMethod: props.changeFilterMethod,\n      filtered: []\n    };\n  }\n\n  showMenu(showMenu) {\n    this.setState({ showMenu: !showMenu });\n  }\n\n  selectFilter(i, filterMethodString) {\n    const { changeFilterMethod, filtered } = this.state;\n\n    this.setState({\n      showMenu: false,\n      filterMethodString: filterMethodString,\n      filterMethod: i\n    });\n\n    changeFilterMethod(i, filterMethodString, filtered);\n  }\n\n  uploadCsv() {\n    const { putDataToDB, csvData, csvHeader, csvName } = this.props;\n\n    var name = prompt(\"Please enter name for csv\");\n\n    putDataToDB(name, csvData, csvHeader);\n  }\n\n  deleteCsv() {\n    const { deleteFromDB } = this.props;\n    deleteFromDB();\n  }\n\n  downloadCsv() {\n    const { csvData, csvHeader } = this.props;\n\n    let downloadedData = [];\n    let header = [];\n\n    for (let j = 0; j < csvHeader.length; j++) {\n      header.push(csvHeader[j].Header);\n    }\n\n    downloadedData.push(header);\n\n    for (let i = 0; i < csvData.length; i++) {\n      let body = [];\n\n      for (let j = 0; j < csvHeader.length; j++) {\n        let columnName = csvHeader[j].Header;\n        body.push(csvData[i][columnName]);\n      }\n      downloadedData.push(body);\n    }\n    this.setState({ downloadData: downloadedData });\n  }\n\n  render() {\n    const { showMenu, filterMethodString, downloadData, filtered } = this.state;\n    const { csvData, csvHeader } = this.props;\n\n    if (!csvData) {\n      return <div />;\n    }\n\n    //  const currentRecords = this.selectTable.getResolvedState().sortedData;\n    // console.log(currentRecords);\n\n    return (\n      <div>\n        <Grid container>\n          <Grid item xs={4}>\n            <div>\n              <button onClick={() => this.showMenu(showMenu)}>\n                {\"Filter Method\"}\n              </button>\n              <span> {filterMethodString} </span>\n            </div>\n          </Grid>\n          <Grid item xs={6} />\n          <Grid item xs={2}>\n            <img\n              alt=\"weFantastic\"\n              src={uploadIcon}\n              onClick={() => this.uploadCsv()}\n              style={{\n                width: \"30px\"\n              }}\n            />\n            <CSVLink data={downloadData}>\n              <img\n                alt=\"weFantastic\"\n                src={downloadIcon}\n                onClick={() => this.downloadCsv()}\n                style={{\n                  width: \"26px\",\n                  marginLeft: \"20px\"\n                }}\n              />\n            </CSVLink>\n            <img\n              alt=\"weFantastic\"\n              onClick={() => this.deleteCsv()}\n              src={deleteIcon}\n              style={{\n                width: \"22px\",\n                marginLeft: \"20px\"\n              }}\n            />\n          </Grid>\n        </Grid>\n\n        {showMenu && (\n          <div className=\"menu\">\n            <button onClick={() => this.selectFilter(0, \"Starts With\")}>\n              {\" \"}\n              Starts With\n            </button>\n            <button onClick={() => this.selectFilter(1, \"Includes\")}>\n              {\" \"}\n              Includes{\" \"}\n            </button>\n            <button onClick={() => this.selectFilter(2, \"Not Includes\")}>\n              {\" \"}\n              Not Includes{\" \"}\n            </button>\n            <button onClick={() => this.selectFilter(3, \"Greater Than\")}>\n              {\" \"}\n              Greater Than{\" \"}\n            </button>\n            <button onClick={() => this.selectFilter(4, \"Lower Than\")}>\n              {\" \"}\n              Lower Than{\" \"}\n            </button>\n          </div>\n        )}\n\n        {csvHeader && csvData && (\n          <ReactTable\n            style={{ marginTop: \"20px\" }}\n            data={csvData}\n            columns={csvHeader}\n            defaultPageSize={10}\n            className=\"-striped -highlight\"\n            onFilteredChange={filtered => this.setState({ filtered })}\n            ref={r => {\n              this.selectTable = r;\n            }}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Csv;\n"]},"metadata":{},"sourceType":"module"}