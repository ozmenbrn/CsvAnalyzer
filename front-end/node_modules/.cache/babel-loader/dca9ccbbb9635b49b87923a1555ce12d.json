{"ast":null,"code":"import _objectSpread from \"/Users/barinozmen/CsvAnalyzer/csv-analyzer/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport React from \"react\";\nimport \"../index.css\";\n\nconst range = len => {\n  const arr = [];\n\n  for (let i = 0; i < len; i++) {\n    arr.push(i);\n  }\n\n  return arr;\n};\n\nconst newRow = (csvElement, csvHeader) => {\n  const statusChance = Math.random();\n  let jsonObject = {};\n\n  for (let i = 0; i < csvHeader.length; i++) {\n    jsonObject[csvHeader[i]] = csvElement[i];\n  }\n\n  return jsonObject;\n};\n\nexport function makeCsvData(csvBody, csvHeader) {\n  return range(csvBody.length).map(d => {\n    return _objectSpread({}, newRow(csvBody[d], csvHeader), {\n      children: range(10).map(newRow)\n    });\n  });\n}","map":{"version":3,"sources":["/Users/barinozmen/CsvAnalyzer/csv-analyzer/src/utils/Utils.js"],"names":["React","range","len","arr","i","push","newRow","csvElement","csvHeader","statusChance","Math","random","jsonObject","length","makeCsvData","csvBody","map","d","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;;AAEA,MAAMC,KAAK,GAAGC,GAAG,IAAI;AACnB,QAAMC,GAAG,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAApB,EAAyBE,CAAC,EAA1B,EAA8B;AAC5BD,IAAAA,GAAG,CAACE,IAAJ,CAASD,CAAT;AACD;;AACD,SAAOD,GAAP;AACD,CAND;;AAQA,MAAMG,MAAM,GAAG,CAACC,UAAD,EAAaC,SAAb,KAA2B;AACxC,QAAMC,YAAY,GAAGC,IAAI,CAACC,MAAL,EAArB;AACA,MAAIC,UAAU,GAAG,EAAjB;;AACA,OAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGI,SAAS,CAACK,MAA9B,EAAsCT,CAAC,EAAvC,EAA2C;AACzCQ,IAAAA,UAAU,CAACJ,SAAS,CAACJ,CAAD,CAAV,CAAV,GAA2BG,UAAU,CAACH,CAAD,CAArC;AACD;;AAED,SAAOQ,UAAP;AACD,CARD;;AAUA,OAAO,SAASE,WAAT,CAAqBC,OAArB,EAA8BP,SAA9B,EAAyC;AAC9C,SAAOP,KAAK,CAACc,OAAO,CAACF,MAAT,CAAL,CAAsBG,GAAtB,CAA0BC,CAAC,IAAI;AACpC,6BACKX,MAAM,CAACS,OAAO,CAACE,CAAD,CAAR,EAAaT,SAAb,CADX;AAEEU,MAAAA,QAAQ,EAAEjB,KAAK,CAAC,EAAD,CAAL,CAAUe,GAAV,CAAcV,MAAd;AAFZ;AAID,GALM,CAAP;AAMD","sourcesContent":["import React from \"react\";\nimport \"../index.css\";\n\nconst range = len => {\n  const arr = [];\n  for (let i = 0; i < len; i++) {\n    arr.push(i);\n  }\n  return arr;\n};\n\nconst newRow = (csvElement, csvHeader) => {\n  const statusChance = Math.random();\n  let jsonObject = {};\n  for (let i = 0; i < csvHeader.length; i++) {\n    jsonObject[csvHeader[i]] = csvElement[i];\n  }\n\n  return jsonObject;\n};\n\nexport function makeCsvData(csvBody, csvHeader) {\n  return range(csvBody.length).map(d => {\n    return {\n      ...newRow(csvBody[d], csvHeader),\n      children: range(10).map(newRow)\n    };\n  });\n}\n"]},"metadata":{},"sourceType":"module"}