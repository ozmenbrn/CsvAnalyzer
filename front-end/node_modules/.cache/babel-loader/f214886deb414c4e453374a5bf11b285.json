{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\"; // @inheritedComponent Paper\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '../styles/withStyles';\nimport Paper from '../Paper';\nimport StepConnector from '../StepConnector';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    padding: 24\n  },\n\n  /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n  horizontal: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {\n    flexDirection: 'column'\n  },\n\n  /* Styles applied to the root element if `alternativeLabel={true}`. */\n  alternativeLabel: {\n    alignItems: 'flex-start'\n  }\n};\n\nfunction Stepper(props) {\n  const activeStep = props.activeStep,\n        alternativeLabel = props.alternativeLabel,\n        children = props.children,\n        classes = props.classes,\n        classNameProp = props.className,\n        connectorProp = props.connector,\n        nonLinear = props.nonLinear,\n        orientation = props.orientation,\n        other = _objectWithoutPropertiesLoose(props, [\"activeStep\", \"alternativeLabel\", \"children\", \"classes\", \"className\", \"connector\", \"nonLinear\", \"orientation\"]);\n\n  const className = classNames(classes.root, classes[orientation], {\n    [classes.alternativeLabel]: alternativeLabel\n  }, classNameProp);\n  const connector = React.isValidElement(connectorProp) ? React.cloneElement(connectorProp, {\n    orientation\n  }) : null;\n  const childrenArray = React.Children.toArray(children);\n  const steps = childrenArray.map((step, index) => {\n    const controlProps = {\n      alternativeLabel,\n      connector: connectorProp,\n      last: index + 1 === childrenArray.length,\n      orientation\n    };\n    const state = {\n      index,\n      active: false,\n      completed: false,\n      disabled: false\n    };\n\n    if (activeStep === index) {\n      state.active = true;\n    } else if (!nonLinear && activeStep > index) {\n      state.completed = true;\n    } else if (!nonLinear && activeStep < index) {\n      state.disabled = true;\n    }\n\n    return [!alternativeLabel && connector && index !== 0 && React.cloneElement(connector, _extends({\n      key: index\n    }, state)), React.cloneElement(step, _extends({}, controlProps, state, step.props))];\n  });\n  return React.createElement(Paper, _extends({\n    square: true,\n    elevation: 0,\n    className: className\n  }, other), steps);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Stepper.propTypes = {\n  /**\n   * Set the active step (zero based index).\n   */\n  activeStep: PropTypes.number,\n\n  /**\n   * If set to 'true' and orientation is horizontal,\n   * then the step label will be positioned under the icon.\n   */\n  alternativeLabel: PropTypes.bool,\n\n  /**\n   * Two or more `<Step />` components.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A component to be placed between each step.\n   */\n  connector: PropTypes.element,\n\n  /**\n   * If set the `Stepper` will not assist in controlling steps for linear flow.\n   */\n  nonLinear: PropTypes.bool,\n\n  /**\n   * The stepper orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical'])\n} : void 0;\nStepper.defaultProps = {\n  activeStep: 0,\n  alternativeLabel: false,\n  connector: React.createElement(StepConnector, null),\n  nonLinear: false,\n  orientation: 'horizontal'\n};\nexport default withStyles(styles, {\n  name: 'MuiStepper'\n})(Stepper);","map":null,"metadata":{},"sourceType":"module"}