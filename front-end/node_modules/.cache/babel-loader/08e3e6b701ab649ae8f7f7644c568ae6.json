{"ast":null,"code":"var _jsxFileName = \"/Users/barinozmen/CsvAnalyzer/csv-analyzer/src/components/Csv.js\";\nimport React, { Component } from \"react\";\nimport { makeCsvData } from \"../utils/Utils\"; // Import React Table\n\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport CSVReader from \"react-csv-reader\";\n\nclass Csv extends Component {\n  constructor(props) {\n    super(props);\n\n    this.uploadCsv = event => {\n      if (!event) {\n        return;\n      }\n\n      let columns = [];\n      let accessors = [];\n      let csvBody = [];\n\n      for (let i = 0; i < event[0].length; i++) {\n        let headerElement = {\n          Header: event[0][i],\n          accessor: event[0][i],\n          filterable: true,\n          filterMethod: (filter, row) => row[filter.id].startsWith(filter.value) && row[filter.id].endsWith(filter.value)\n        };\n        columns.push(headerElement);\n        accessors.push(event[0][i]);\n      }\n\n      for (let i = 1; i < event.length; i++) {\n        let tempArray = [];\n\n        for (let j = 0; j < event[0].length; j++) {\n          tempArray.push(event[i][j]);\n        }\n\n        csvBody.push(tempArray);\n      }\n\n      this.setState({\n        csvHeader: columns,\n        csvData: makeCsvData(csvBody, accessors)\n      });\n    };\n\n    this.state = {\n      csvData: props.csvData,\n      csvHeader: props.csvHeader,\n      loading: false,\n      showMenu: false,\n      filterMethodString: \"Starts With\",\n      filterMethod: 0\n    };\n  }\n\n  handleDarkSideForce() {\n    console.log(\"DARKSIDE\");\n  }\n\n  showMenu(showMenu) {\n    this.setState({\n      showMenu: !showMenu\n    });\n  }\n\n  selectFilter(i, filterMethodString) {\n    this.setState({\n      showMenu: false,\n      filterMethodString: filterMethodString,\n      filterMethod: i\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          csvData = _this$state.csvData,\n          csvHeader = _this$state.csvHeader,\n          showMenu = _this$state.showMenu,\n          filterMethodString = _this$state.filterMethodString;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(CSVReader, {\n      cssClass: \"csv-reader-input\",\n      label: \"Csv Reader\",\n      onFileLoaded: this.uploadCsv,\n      onError: this.handleDarkSideForce,\n      inputId: \"csv\",\n      inputStyle: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      style: {\n        marginTop: \"12px\"\n      },\n      onClick: () => this.showMenu(showMenu),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Filter Method\"), React.createElement(\"text\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \" \", filterMethodString, \" \")), showMenu && React.createElement(\"div\", {\n      className: \"menu\",\n      style: {\n        marginTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.selectFilter(0, \"Starts With\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \" \", \"Starts With\"), React.createElement(\"button\", {\n      onClick: () => this.selectFilter(1, \"Ends With\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \" \", \"Ends With\", \" \"), React.createElement(\"button\", {\n      onClick: () => this.selectFilter(2, \"Not Includes\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \" \", \"Not Includes\", \" \"), React.createElement(\"button\", {\n      onClick: () => this.selectFilter(3, \"Exact Match\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \" \", \"Exact Match\", \" \")), csvHeader && csvData && React.createElement(ReactTable, {\n      style: {\n        marginTop: \"20px\"\n      },\n      data: csvData,\n      columns: csvHeader,\n      defaultPageSize: 10,\n      className: \"-striped -highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Csv;","map":{"version":3,"sources":["/Users/barinozmen/CsvAnalyzer/csv-analyzer/src/components/Csv.js"],"names":["React","Component","makeCsvData","ReactTable","CSVReader","Csv","constructor","props","uploadCsv","event","columns","accessors","csvBody","i","length","headerElement","Header","accessor","filterable","filterMethod","filter","row","id","startsWith","value","endsWith","push","tempArray","j","setState","csvHeader","csvData","state","loading","showMenu","filterMethodString","handleDarkSideForce","console","log","selectFilter","render","color","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { makeCsvData } from \"../utils/Utils\";\n\n// Import React Table\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport CSVReader from \"react-csv-reader\";\n\nclass Csv extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      csvData: props.csvData,\n      csvHeader: props.csvHeader,\n      loading: false,\n      showMenu: false,\n      filterMethodString: \"Starts With\",\n      filterMethod: 0\n    };\n  }\n\n  uploadCsv = event => {\n    if (!event) {\n      return;\n    }\n\n    let columns = [];\n    let accessors = [];\n    let csvBody = [];\n\n    for (let i = 0; i < event[0].length; i++) {\n      let headerElement = {\n        Header: event[0][i],\n        accessor: event[0][i],\n        filterable: true,\n        filterMethod: (filter, row) =>\n          row[filter.id].startsWith(filter.value) &&\n          row[filter.id].endsWith(filter.value)\n      };\n      columns.push(headerElement);\n      accessors.push(event[0][i]);\n    }\n\n    for (let i = 1; i < event.length; i++) {\n      let tempArray = [];\n      for (let j = 0; j < event[0].length; j++) {\n        tempArray.push(event[i][j]);\n      }\n      csvBody.push(tempArray);\n    }\n\n    this.setState({\n      csvHeader: columns,\n      csvData: makeCsvData(csvBody, accessors)\n    });\n  };\n\n  handleDarkSideForce() {\n    console.log(\"DARKSIDE\");\n  }\n\n  showMenu(showMenu) {\n    this.setState({ showMenu: !showMenu });\n  }\n\n  selectFilter(i, filterMethodString) {\n    this.setState({\n      showMenu: false,\n      filterMethodString: filterMethodString,\n      filterMethod: i\n    });\n  }\n\n  render() {\n    const { csvData, csvHeader, showMenu, filterMethodString } = this.state;\n\n    return (\n      <div>\n        <CSVReader\n          cssClass=\"csv-reader-input\"\n          label=\"Csv Reader\"\n          onFileLoaded={this.uploadCsv}\n          onError={this.handleDarkSideForce}\n          inputId=\"csv\"\n          inputStyle={{ color: \"red\" }}\n        />\n        <div>\n          <button\n            style={{ marginTop: \"12px\" }}\n            onClick={() => this.showMenu(showMenu)}\n          >\n            Filter Method\n          </button>\n          <text> {filterMethodString} </text>\n        </div>\n\n        {showMenu && (\n          <div className=\"menu\" style={{ marginTop: \"10px\" }}>\n            <button onClick={() => this.selectFilter(0, \"Starts With\")}>\n              {\" \"}\n              Starts With\n            </button>\n            <button onClick={() => this.selectFilter(1, \"Ends With\")}>\n              {\" \"}\n              Ends With{\" \"}\n            </button>\n            <button onClick={() => this.selectFilter(2, \"Not Includes\")}>\n              {\" \"}\n              Not Includes{\" \"}\n            </button>\n            <button onClick={() => this.selectFilter(3, \"Exact Match\")}>\n              {\" \"}\n              Exact Match{\" \"}\n            </button>\n          </div>\n        )}\n\n        {csvHeader && csvData && (\n          <ReactTable\n            style={{ marginTop: \"20px\" }}\n            data={csvData}\n            columns={csvHeader}\n            defaultPageSize={10}\n            className=\"-striped -highlight\"\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Csv;\n"]},"metadata":{},"sourceType":"module"}