{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { componentPropType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport TableContext from './TableContext';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table',\n    fontFamily: theme.typography.fontFamily,\n    width: '100%',\n    borderCollapse: 'collapse',\n    borderSpacing: 0\n  }\n});\n\nclass Table extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.memoizedContextValue = {};\n  } // To replace with the corresponding Hook once Material-UI v4 is out:\n  // https://reactjs.org/docs/hooks-reference.html#usememo\n\n\n  useMemo(contextValue) {\n    const objectKeys = Object.keys(contextValue);\n\n    for (let i = 0; i < objectKeys.length; i += 1) {\n      const objectKey = objectKeys[i];\n\n      if (contextValue[objectKey] !== this.memoizedContextValue[objectKey]) {\n        this.memoizedContextValue = contextValue;\n        break;\n      }\n    }\n\n    return this.memoizedContextValue;\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          className = _this$props.className,\n          Component = _this$props.component,\n          padding = _this$props.padding,\n          other = _objectWithoutPropertiesLoose(_this$props, [\"classes\", \"className\", \"component\", \"padding\"]);\n\n    return React.createElement(TableContext.Provider, {\n      value: this.useMemo({\n        padding\n      })\n    }, React.createElement(Component, _extends({\n      className: classNames(classes.root, className)\n    }, other)));\n  }\n\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes = {\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: componentPropType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'dense', 'none'])\n} : void 0;\nTable.defaultProps = {\n  component: 'table',\n  padding: 'default'\n};\nexport default withStyles(styles, {\n  name: 'MuiTable'\n})(Table);","map":null,"metadata":{},"sourceType":"module"}