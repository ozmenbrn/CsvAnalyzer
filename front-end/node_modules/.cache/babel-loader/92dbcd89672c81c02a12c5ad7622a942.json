{"ast":null,"code":"var _jsxFileName = \"/Users/barinozmen/CsvAnalyzer/front-end/src/pages/Cms.js\";\nimport React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { Grid, CircularProgress } from \"@material-ui/core/es\";\nimport Csv from \"../components/Csv\";\nimport { makeCsvData } from \"../utils/Utils\";\nimport CSVReader from \"react-csv-reader\";\nimport logo from \"../assets/images/wpwflogo.png\";\nimport SearchComponent from \"../components/SearchComponent\";\nimport { ListItem, List } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    overflow: \"hidden\"\n  },\n  menu: {\n    backgroundColor: \"#ffffff\",\n    height: \"100%\"\n  },\n  rhsHeader: {\n    backgroundColor: \"#ffffff\",\n    height: \"100%\",\n    alignItems: \"center\",\n    display: \"flex\",\n    marginLeft: \"40px\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n    fontStyle: \"normal\",\n    fontStretch: \"normal\",\n    lineHeight: \"0.92\",\n    letterSpacing: \"1px\",\n    color: \"#ffffff\"\n  },\n  rhsMain: {\n    backgroundColor: \"#f4f4f4\",\n    padding: 30,\n    height: \"100%\",\n    overflow: \"auto\"\n  },\n  menuHeaderText: {\n    color: \"#ffffff\",\n    height: \"100%\",\n    alignItems: \"center\",\n    display: \"flex\",\n    marginLeft: \"40px\",\n    fontSize: \"18px\",\n    fontWeight: \"normal\",\n    fontStyle: \"normal\",\n    fontStretch: \"normal\",\n    lineHeight: \"normal\"\n  },\n  menuListItem: {\n    height: \"92%\"\n  },\n  csvListItem: {\n    height: \"45px\"\n  },\n  csvContainer: {\n    height: \"90%\",\n    overflow: \"auto\"\n  },\n  listItem: {\n    fontSize: \"16px\",\n    display: \"-webkit-box\",\n    width: \"100%\",\n    margin: \"0 auto\",\n    WebkitLineClamp: \"2\",\n    WebkitBoxOrient: \"vertical\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\"\n  },\n  progress: {\n    margin: theme.spacing.unit * 2\n  }\n});\n\nclass Cms extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getDataFromDb = key => {\n      const csvList = this.state.csvList;\n      this.setState({\n        loading: true\n      });\n      fetch(\"http://localhost:3001/api/getData?name=\".concat(csvList[key])).then(data => data.json()).then(res => {\n        this.setState({\n          csvData: res.data.data.body,\n          csvHeader: res.data.data.columns\n        });\n        this.setState({});\n        this.setState({});\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.putDataToDB = (csvName, csvData, csvHeader) => {\n      const csvList = this.state.csvList;\n      let currentIds = csvList.map(data => data.id);\n      let idToBeAdded = 0;\n\n      while (currentIds.includes(idToBeAdded)) {\n        ++idToBeAdded;\n      }\n\n      this.setState({\n        loading: true\n      });\n      axios.post(\"http://localhost:3001/api/putData\", {\n        id: idToBeAdded,\n        name: csvName,\n        columns: csvHeader,\n        body: csvData\n      }).then(response => {\n        this.getCsvListFromDb();\n        this.setState({\n          loading: false\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.getCsvListFromDb = () => {\n      fetch(\"http://localhost:3001/api/listData\").then(data => data.json()).then(res => {\n        this.setState({\n          csvList: res.data\n        });\n      });\n    };\n\n    this.deleteFromDB = () => {\n      const csvName = this.state.csvName;\n      this.setState({\n        loading: true\n      });\n      fetch(\"http://localhost:3001/api/deleteData?name=\".concat(csvName)).then(response => {\n        this.getCsvListFromDb();\n        this.setState({\n          loading: false\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.updateDB = (idToUpdate, updateToApply) => {\n      const csvList = this.state.csvList;\n      let objIdToUpdate = null;\n      csvList.forEach(dat => {\n        if (dat.id === idToUpdate) {\n          objIdToUpdate = dat._id;\n        }\n      });\n      axios.post(\"http://localhost:3001/api/updateData\", {\n        id: objIdToUpdate,\n        update: {\n          csvName: updateToApply\n        }\n      });\n    };\n\n    this.uploadCsv = event => {\n      if (!event) {\n        return;\n      }\n\n      let columns = [];\n      let accessors = [];\n      let csvBody = [];\n\n      for (let i = 0; i < event[0].length; i++) {\n        let headerElement = {\n          Header: event[0][i],\n          accessor: event[0][i],\n          filterable: true,\n          filterMethod: (filter, row) => // row[filter.id].endsWith(filter.value) &&\n          row[filter.id].startsWith(filter.value)\n        };\n        columns.push(headerElement);\n        accessors.push(event[0][i]);\n      }\n\n      for (let i = 1; i < event.length; i++) {\n        let tempArray = [];\n\n        for (let j = 0; j < event[0].length; j++) {\n          tempArray.push(event[i][j]);\n        }\n\n        csvBody.push(tempArray);\n      }\n\n      this.setState({\n        csvHeader: columns,\n        csvData: makeCsvData(csvBody, accessors)\n      });\n    };\n\n    this.searchEvent = text => {\n      this.setState({\n        searchQuery: text\n      });\n    };\n\n    this.onSelectMenuItem = key => {\n      this.setState({\n        selectedItem: key\n      });\n      this.getDataFromDb(key);\n    };\n\n    this.renderCsvItems = () => {\n      const classes = this.props.classes;\n      const _this$state = this.state,\n            selectedItem = _this$state.selectedItem,\n            csvList = _this$state.csvList;\n      return csvList.map((item, i) => {\n        return React.createElement(ListItem, {\n          selected: selectedItem === i ? true : false,\n          divider: true,\n          key: i,\n          className: classes.csvListItem,\n          onClick: () => this.onSelectMenuItem(i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: classes.listItem,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269\n          },\n          __self: this\n        }, item));\n      });\n    };\n\n    this.state = {\n      height: null,\n      csvHeader: null,\n      csvData: null,\n      filterMethodString: \"Starts With\",\n      filterMethod: 0,\n      searchQuery: \"\",\n      selectedItem: null,\n      csvList: [],\n      csvName: null,\n      id: 0,\n      csvName: null,\n      intervalIsSet: false,\n      idToDelete: null,\n      idToUpdate: null,\n      objectToUpdate: null,\n      modalOpen: false,\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.resizeEvent();\n    window.addEventListener(\"resize\", () => this.resizeEvent());\n    this.getCsvListFromDb();\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n    }\n  }\n\n  handleDarkSideForce() {\n    console.log(\"DARKSIDE\");\n  }\n\n  resizeEvent() {\n    this.setState({\n      height: window.innerHeight\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          height = _this$state2.height,\n          csvHeader = _this$state2.csvHeader,\n          csvData = _this$state2.csvData,\n          loading = _this$state2.loading;\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, loading && React.createElement(\"div\", {\n      style: {\n        position: \"absolute\",\n        width: \"100%\",\n        height: \"100%\",\n        top: \"50%\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      className: classes.progress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      container: true,\n      spacing: 0,\n      style: {\n        height: height\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      style: {\n        height: \"8%\",\n        backgroundColor: \"#ffffff\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"weFantastic\",\n      src: logo,\n      style: {\n        width: \"160px\",\n        marginTop: \"10px\",\n        marginLeft: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginTop: \"8px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, React.createElement(CSVReader, {\n      cssClass: \"csv-reader-input\",\n      label: \"+ Add New Csv File\",\n      onFileLoaded: this.uploadCsv,\n      onError: this.handleDarkSideForce,\n      inputId: \"csv\",\n      inputStyle: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      container: true,\n      style: {\n        height: \"92%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      style: {\n        height: \"10%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(SearchComponent, {\n      searchEvent: this.searchEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      container: true,\n      className: classes.csvContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(List, {\n      component: \"nav\",\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, this.renderCsvItems()))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      className: classes.rhsMain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(Csv, {\n      csvHeader: csvHeader,\n      csvData: csvData,\n      putDataToDB: this.putDataToDB,\n      deleteFromDB: this.deleteFromDB,\n      updateDB: this.updateDB,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default withStyles(styles)(Cms);","map":{"version":3,"sources":["/Users/barinozmen/CsvAnalyzer/front-end/src/pages/Cms.js"],"names":["React","Component","withStyles","Grid","CircularProgress","Csv","makeCsvData","CSVReader","logo","SearchComponent","ListItem","List","axios","styles","theme","root","flexGrow","overflow","menu","backgroundColor","height","rhsHeader","alignItems","display","marginLeft","fontSize","fontWeight","fontStyle","fontStretch","lineHeight","letterSpacing","color","rhsMain","padding","menuHeaderText","menuListItem","csvListItem","csvContainer","listItem","width","margin","WebkitLineClamp","WebkitBoxOrient","textOverflow","progress","spacing","unit","Cms","constructor","props","getDataFromDb","key","csvList","state","setState","loading","fetch","then","data","json","res","csvData","body","csvHeader","columns","putDataToDB","csvName","currentIds","map","id","idToBeAdded","includes","post","name","response","getCsvListFromDb","catch","err","console","log","deleteFromDB","updateDB","idToUpdate","updateToApply","objIdToUpdate","forEach","dat","_id","update","uploadCsv","event","accessors","csvBody","i","length","headerElement","Header","accessor","filterable","filterMethod","filter","row","startsWith","value","push","tempArray","j","searchEvent","text","searchQuery","onSelectMenuItem","selectedItem","renderCsvItems","classes","item","filterMethodString","intervalIsSet","idToDelete","objectToUpdate","modalOpen","componentDidMount","resizeEvent","window","addEventListener","componentWillUnmount","clearInterval","handleDarkSideForce","innerHeight","render","position","top","textAlign","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { Grid, CircularProgress } from \"@material-ui/core/es\";\nimport Csv from \"../components/Csv\";\nimport { makeCsvData } from \"../utils/Utils\";\nimport CSVReader from \"react-csv-reader\";\nimport logo from \"../assets/images/wpwflogo.png\";\nimport SearchComponent from \"../components/SearchComponent\";\nimport { ListItem, List } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    overflow: \"hidden\"\n  },\n  menu: {\n    backgroundColor: \"#ffffff\",\n    height: \"100%\"\n  },\n  rhsHeader: {\n    backgroundColor: \"#ffffff\",\n    height: \"100%\",\n    alignItems: \"center\",\n    display: \"flex\",\n    marginLeft: \"40px\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n    fontStyle: \"normal\",\n    fontStretch: \"normal\",\n    lineHeight: \"0.92\",\n    letterSpacing: \"1px\",\n    color: \"#ffffff\"\n  },\n  rhsMain: {\n    backgroundColor: \"#f4f4f4\",\n    padding: 30,\n    height: \"100%\",\n    overflow: \"auto\"\n  },\n  menuHeaderText: {\n    color: \"#ffffff\",\n    height: \"100%\",\n    alignItems: \"center\",\n    display: \"flex\",\n    marginLeft: \"40px\",\n    fontSize: \"18px\",\n    fontWeight: \"normal\",\n    fontStyle: \"normal\",\n    fontStretch: \"normal\",\n    lineHeight: \"normal\"\n  },\n  menuListItem: {\n    height: \"92%\"\n  },\n  csvListItem: {\n    height: \"45px\"\n  },\n  csvContainer: {\n    height: \"90%\",\n    overflow: \"auto\"\n  },\n  listItem: {\n    fontSize: \"16px\",\n    display: \"-webkit-box\",\n    width: \"100%\",\n    margin: \"0 auto\",\n    WebkitLineClamp: \"2\",\n    WebkitBoxOrient: \"vertical\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\"\n  },\n  progress: {\n    margin: theme.spacing.unit * 2\n  }\n});\n\nclass Cms extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      height: null,\n      csvHeader: null,\n      csvData: null,\n      filterMethodString: \"Starts With\",\n      filterMethod: 0,\n      searchQuery: \"\",\n      selectedItem: null,\n      csvList: [],\n      csvName: null,\n      id: 0,\n      csvName: null,\n      intervalIsSet: false,\n      idToDelete: null,\n      idToUpdate: null,\n      objectToUpdate: null,\n      modalOpen: false,\n      loading: false\n    };\n  }\n\n  getDataFromDb = key => {\n    const { csvList } = this.state;\n\n    this.setState({ loading: true });\n\n    fetch(`http://localhost:3001/api/getData?name=${csvList[key]}`)\n      .then(data => data.json())\n      .then(res => {\n        this.setState({ csvData: res.data.data.body, csvHeader: res.data.data.columns });\n        this.setState({  });\n        this.setState({  });\n        this.setState({loading: false});\n      });\n  };\n\n  // our put method that uses our backend api\n  // to create new query into our data base\n  putDataToDB = (csvName, csvData, csvHeader) => {\n    const { csvList } = this.state;\n\n    let currentIds = csvList.map(data => data.id);\n    let idToBeAdded = 0;\n    while (currentIds.includes(idToBeAdded)) {\n      ++idToBeAdded;\n    }\n\n    this.setState({ loading: true });\n\n    axios\n      .post(\"http://localhost:3001/api/putData\", {\n        id: idToBeAdded,\n        name: csvName,\n        columns: csvHeader,\n        body: csvData\n      })\n      .then(response => {\n        this.getCsvListFromDb();\n        this.setState({ loading: false });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  getCsvListFromDb = () => {\n    fetch(\"http://localhost:3001/api/listData\")\n      .then(data => data.json())\n      .then(res => {\n        this.setState({ csvList: res.data });\n      });\n  };\n\n  // our delete method that uses our backend api\n  // to remove existing database information\n  deleteFromDB = () => {\n    const { csvName } = this.state;\n\n    this.setState({ loading: true });\n\n    fetch(`http://localhost:3001/api/deleteData?name=${csvName}`)\n      .then(response => {\n        this.getCsvListFromDb();\n        this.setState({ loading: false });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  // our update method that uses our backend api\n  // to overwrite existing data base information\n  updateDB = (idToUpdate, updateToApply) => {\n    const { csvList } = this.state;\n\n    let objIdToUpdate = null;\n    csvList.forEach(dat => {\n      if (dat.id === idToUpdate) {\n        objIdToUpdate = dat._id;\n      }\n    });\n\n    axios.post(\"http://localhost:3001/api/updateData\", {\n      id: objIdToUpdate,\n      update: { csvName: updateToApply }\n    });\n  };\n\n  componentDidMount() {\n    this.resizeEvent();\n    window.addEventListener(\"resize\", () => this.resizeEvent());\n\n    this.getCsvListFromDb();\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n    }\n  }\n\n  uploadCsv = event => {\n    if (!event) {\n      return;\n    }\n\n    let columns = [];\n    let accessors = [];\n    let csvBody = [];\n\n    for (let i = 0; i < event[0].length; i++) {\n      let headerElement = {\n        Header: event[0][i],\n        accessor: event[0][i],\n        filterable: true,\n        filterMethod: (filter, row) =>\n          // row[filter.id].endsWith(filter.value) &&\n          row[filter.id].startsWith(filter.value)\n      };\n      columns.push(headerElement);\n      accessors.push(event[0][i]);\n    }\n\n    for (let i = 1; i < event.length; i++) {\n      let tempArray = [];\n      for (let j = 0; j < event[0].length; j++) {\n        tempArray.push(event[i][j]);\n      }\n      csvBody.push(tempArray);\n    }\n\n    this.setState({\n      csvHeader: columns,\n      csvData: makeCsvData(csvBody, accessors)\n    });\n  };\n\n  handleDarkSideForce() {\n    console.log(\"DARKSIDE\");\n  }\n\n  searchEvent = text => {\n    this.setState({ searchQuery: text });\n  };\n\n  resizeEvent() {\n    this.setState({ height: window.innerHeight });\n  }\n\n  onSelectMenuItem = key => {\n    this.setState({ selectedItem: key });\n    this.getDataFromDb(key);\n  };\n\n  renderCsvItems = () => {\n    const { classes } = this.props;\n    const { selectedItem, csvList } = this.state;\n\n    return csvList.map((item, i) => {\n      return (\n        <ListItem\n          selected={selectedItem === i ? true : false}\n          divider\n          key={i}\n          className={classes.csvListItem}\n          onClick={() => this.onSelectMenuItem(i)}\n        >\n          <div className={classes.listItem}>{item}</div>\n        </ListItem>\n      );\n    });\n  };\n\n  render() {\n    const { height, csvHeader, csvData, loading } = this.state;\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        {loading && (\n          <div\n            style={{\n              position: \"absolute\",\n              width: \"100%\",\n              height: \"100%\",\n              top: \"50%\",\n              textAlign: \"center\"\n            }}\n          >\n            <CircularProgress className={classes.progress} />\n          </div>\n        )}\n        <Grid container spacing={0} style={{ height: height }}>\n          <Grid container style={{ height: \"8%\", backgroundColor: \"#ffffff\" }}>\n            <Grid item xs={4}>\n              <div>\n                <img\n                  alt=\"weFantastic\"\n                  src={logo}\n                  style={{\n                    width: \"160px\",\n                    marginTop: \"10px\",\n                    marginLeft: \"40px\"\n                  }}\n                />\n              </div>\n            </Grid>\n            <Grid item xs={6} />\n            <Grid item xs={2}>\n              <div style={{ marginTop: \"8px\" }}>\n                <CSVReader\n                  cssClass=\"csv-reader-input\"\n                  label=\"+ Add New Csv File\"\n                  onFileLoaded={this.uploadCsv}\n                  onError={this.handleDarkSideForce}\n                  inputId=\"csv\"\n                  inputStyle={{ color: \"red\" }}\n                />\n              </div>\n            </Grid>\n          </Grid>\n          <Grid container style={{ height: \"92%\" }}>\n            <Grid item xs={2} style={{ height: \"100%\" }}>\n              <Grid container style={{ height: \"10%\" }}>\n                <SearchComponent searchEvent={this.searchEvent} />\n              </Grid>\n              <Grid container className={classes.csvContainer}>\n                <List component=\"nav\" style={{ width: \"100%\" }}>\n                  {this.renderCsvItems()}\n                </List>\n              </Grid>\n            </Grid>\n            <Grid item xs={10} className={classes.rhsMain}>\n              <Csv\n                csvHeader={csvHeader}\n                csvData={csvData}\n                putDataToDB={this.putDataToDB}\n                deleteFromDB={this.deleteFromDB}\n                updateDB={this.updateDB}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Cms);\n"]},"metadata":{},"sourceType":"module"}