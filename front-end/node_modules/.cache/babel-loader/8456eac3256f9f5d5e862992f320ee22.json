{"ast":null,"code":"var _jsxFileName = \"/Users/barinozmen/CsvAnalyzer/front-end/src/pages/Cms.js\";\nimport React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { Grid, CircularProgress } from \"@material-ui/core/es\";\nimport Csv from \"../components/Csv\";\nimport { makeCsvData } from \"../utils/Utils\";\nimport CSVReader from \"react-csv-reader\";\nimport logo from \"../assets/images/wpwflogo.png\";\nimport SearchComponent from \"../components/SearchComponent\";\nimport Auth from \"../components/Auth\";\nimport { ListItem, List } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport CryptoJS from \"crypto-js\";\nconst baseUrl = \"http://localhost:3001/api/\";\nconst username = \"5342745714\";\nconst password = \"password\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    overflow: \"hidden\"\n  },\n  menu: {\n    backgroundColor: \"#ffffff\",\n    height: \"100%\"\n  },\n  rhsHeader: {\n    backgroundColor: \"#ffffff\",\n    height: \"100%\",\n    alignItems: \"center\",\n    display: \"flex\",\n    marginLeft: \"40px\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n    fontStyle: \"normal\",\n    fontStretch: \"normal\",\n    lineHeight: \"0.92\",\n    letterSpacing: \"1px\",\n    color: \"#ffffff\"\n  },\n  rhsMain: {\n    backgroundColor: \"#f4f4f4\",\n    padding: 30,\n    height: \"100%\",\n    overflow: \"auto\"\n  },\n  menuHeaderText: {\n    color: \"#ffffff\",\n    height: \"100%\",\n    alignItems: \"center\",\n    display: \"flex\",\n    marginLeft: \"40px\",\n    fontSize: \"18px\",\n    fontWeight: \"normal\",\n    fontStyle: \"normal\",\n    fontStretch: \"normal\",\n    lineHeight: \"normal\"\n  },\n  menuListItem: {\n    height: \"92%\"\n  },\n  csvListItem: {\n    height: \"45px\"\n  },\n  csvContainer: {\n    height: \"90%\",\n    overflow: \"auto\"\n  },\n  listItem: {\n    fontSize: \"16px\",\n    display: \"-webkit-box\",\n    width: \"100%\",\n    margin: \"0 auto\",\n    WebkitLineClamp: \"2\",\n    WebkitBoxOrient: \"vertical\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\"\n  },\n  progress: {}\n});\n\nclass Cms extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getDataFromDb = key => {\n      const _this$state = this.state,\n            csvList = _this$state.csvList,\n            token = _this$state.token;\n      this.setState({\n        loading: true,\n        csvData: null,\n        csvHeader: null\n      });\n      let hashString = token + moment().unix();\n      let hash = this.generateHash(hashString);\n      fetch(\"\".concat(baseUrl, \"getData?name=\").concat(csvList[key], \"&param=\").concat(hash)).then(data => data.json()).then(res => {\n        this.setState({\n          csvData: res.data.data.body,\n          csvHeader: res.data.data.columns,\n          csvName: res.data.data.name,\n          loading: false\n        });\n      });\n    };\n\n    this.putDataToDB = (csvName, csvData, csvHeader) => {\n      const _this$state2 = this.state,\n            csvList = _this$state2.csvList,\n            searchQuery = _this$state2.searchQuery,\n            token = _this$state2.token;\n      let currentIds = csvList.map(data => data.id);\n      let idToBeAdded = 0;\n\n      while (currentIds.includes(idToBeAdded)) {\n        ++idToBeAdded;\n      }\n\n      this.setState({\n        loading: true\n      });\n      let hashString = token + moment().unix();\n      let hash = this.generateHash(hashString);\n      axios.post(\"\".concat(baseUrl, \"putData?param=\").concat(hash), {\n        id: idToBeAdded,\n        name: csvName,\n        columns: csvHeader,\n        body: csvData,\n        param: hash\n      }).then(response => {\n        this.getCsvListFromDb(searchQuery);\n        this.setState({\n          loading: false\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.getCsvListFromDb = text => {\n      const token = this.state.token;\n      let hashString = token + moment().unix();\n      let hash = this.generateHash(hashString);\n      fetch(\"\".concat(baseUrl, \"listData?query=\").concat(text, \"&param=\").concat(hash)).then(data => data.json()).then(res => {\n        this.setState({\n          csvList: res.data\n        });\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.deleteFromDB = () => {\n      const _this$state3 = this.state,\n            csvName = _this$state3.csvName,\n            searchQuery = _this$state3.searchQuery,\n            token = _this$state3.token;\n      this.setState({\n        loading: true\n      });\n      let hashString = token + moment().unix();\n      let hash = this.generateHash(hashString);\n      fetch(\"\".concat(baseUrl, \"deleteData?name=\").concat(csvName, \"&param=\").concat(hash)).then(response => {\n        this.getCsvListFromDb(searchQuery);\n        this.setState({\n          loading: false,\n          selectedItem: null,\n          csvData: null,\n          csvHeader: null\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.uploadCsv = (event, fileName) => {\n      if (!event) {\n        return;\n      }\n\n      console.log(\"event coming throug\", event[0]);\n      let columns = [];\n      let accessors = [];\n      let csvBody = [];\n\n      for (let i = 0; i < event[0].length; i++) {\n        let headerElement = {\n          Header: event[0][i],\n          accessor: event[0][i],\n          filterable: true,\n          filterMethod: (filter, row) => row[filter.id] && row[filter.id].startsWith(filter.value)\n        };\n        columns.push(headerElement);\n        accessors.push(event[0][i]);\n      }\n\n      console.log(\"columns\", columns);\n\n      for (let i = 1; i < event.length; i++) {\n        let tempArray = [];\n\n        for (let j = 0; j < event[0].length; j++) {\n          tempArray.push(event[i][j]);\n        }\n\n        csvBody.push(tempArray);\n      }\n\n      this.setState({\n        csvHeader: columns,\n        csvData: makeCsvData(csvBody, accessors),\n        loading: false,\n        selectedItem: null,\n        csvName: fileName,\n        event: event\n      });\n    };\n\n    this.changeFilterMethod = (i, filterName) => {\n      const csvHeader = this.state.csvHeader;\n\n      if (!csvHeader) {\n        return;\n      }\n\n      let columns = [];\n\n      if (i === 0) {\n        columns = this.getFilterStartsWith();\n      } else if (i === 1) {\n        columns = this.getFilterIncludes();\n      } else if (i === 2) {\n        columns = this.getFil();\n      } else if (i === 3) {\n        columns = this.getFilterStartsWith();\n      } else if (i === 4) {\n        columns = this.getFilterStartsWith();\n      }\n\n      this.setState({\n        csvHeader: columns\n      });\n    };\n\n    this.searchEvent = text => {\n      this.setState({\n        searchQuery: text\n      });\n      this.getCsvListFromDb(text);\n    };\n\n    this.authEvent = (str1, str2) => {\n      const searchQuery = this.state.searchQuery;\n      localStorage.setItem(\"username\", str1);\n      localStorage.setItem(\"password\", str2);\n\n      if (str1 === username && str2 === password) {\n        this.setState({\n          authorized: true,\n          token: str1 + str2\n        });\n        setTimeout(() => {\n          this.getCsvListFromDb(searchQuery);\n        }, 1000);\n      } else {\n        window.alert(\"Wrong Credentials\");\n      }\n    };\n\n    this.onSelectMenuItem = key => {\n      this.setState({\n        selectedItem: key\n      });\n      this.getDataFromDb(key);\n    };\n\n    this.renderCsvItems = () => {\n      const classes = this.props.classes;\n      const _this$state4 = this.state,\n            selectedItem = _this$state4.selectedItem,\n            csvList = _this$state4.csvList;\n      return csvList.map((item, i) => {\n        let csvItem = item.substring(0, item.length - 5);\n        return React.createElement(ListItem, {\n          selected: selectedItem === i ? true : false,\n          divider: true,\n          key: i,\n          className: classes.csvListItem,\n          onClick: () => this.onSelectMenuItem(i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 428\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: classes.listItem,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 435\n          },\n          __self: this\n        }, csvItem));\n      });\n    };\n\n    this.state = {\n      height: null,\n      csvHeader: null,\n      csvData: null,\n      filterMethodString: \"\",\n      filterMethod: 0,\n      searchQuery: \"\",\n      selectedItem: null,\n      csvList: [],\n      csvName: null,\n      id: 0,\n      loading: false,\n      authorized: false,\n      token: \"\",\n      event: null\n    };\n  }\n\n  componentDidMount() {\n    const searchQuery = this.state.searchQuery;\n    this.resizeEvent();\n    window.addEventListener(\"resize\", () => this.resizeEvent());\n\n    if (localStorage.getItem(\"username\") === username && localStorage.getItem(\"password\") === password) {\n      this.setState({\n        authorized: true,\n        token: localStorage.getItem(\"username\") + localStorage.getItem(\"password\")\n      });\n    }\n\n    setTimeout(() => {\n      this.getCsvListFromDb(searchQuery);\n    }, 1000);\n  }\n\n  generateHash(text) {\n    var hash = CryptoJS.AES.encrypt(JSON.stringify(text), \"Mine Secret\");\n    return encodeURIComponent(hash);\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n    }\n  }\n\n  handleDarkSideForce() {\n    console.log(\"DARKSIDE\");\n  }\n\n  getFilterStartsWith() {\n    const csvHeader = this.state.csvHeader;\n    let columns = [];\n\n    for (let i = 0; i < csvHeader.length; i++) {\n      let headerElement = {\n        Header: csvHeader[i].Header,\n        accessor: csvHeader[i].accessor,\n        filterable: true,\n        filterMethod: (filter, row) => row[filter.id] && row[filter.id].startsWith(filter.value)\n      };\n      columns.push(headerElement);\n    }\n\n    return columns;\n  }\n\n  getFilterIncludes() {\n    const csvHeader = this.state.csvHeader;\n    let columns = [];\n\n    for (let i = 0; i < csvHeader.length; i++) {\n      let headerElement = {\n        Header: csvHeader[i].Header,\n        accessor: csvHeader[i].accessor,\n        filterable: true,\n        filterMethod: (filter, row) => row[filter.id] && row[filter.id].includes(filter.value)\n      };\n      columns.push(headerElement);\n    }\n\n    return columns;\n  }\n\n  getFilterNotIncludes() {\n    const csvHeader = this.state.csvHeader;\n    let columns = [];\n\n    for (let i = 0; i < csvHeader.length; i++) {\n      let headerElement = {\n        Header: csvHeader[i].Header,\n        accessor: csvHeader[i].accessor,\n        filterable: true,\n        filterMethod: (filter, row) => row[filter.id] && row[filter.id].indexOf(filter.value) === -1\n      };\n      columns.push(headerElement);\n    }\n\n    return columns;\n  }\n\n  getFilterBigerThan() {\n    const csvHeader = this.state.csvHeader;\n    let columns = [];\n\n    for (let i = 0; i < csvHeader.length; i++) {\n      let headerElement = {\n        Header: csvHeader[i].Header,\n        accessor: csvHeader[i].accessor,\n        filterable: true,\n        filterMethod: (filter, row) => row[filter.id] && parseInt(row[filter.id]) >= parseInt(filter.value)\n      };\n      columns.push(headerElement);\n    }\n\n    return columns;\n  }\n\n  getFilterLowerThan() {\n    const csvHeader = this.state.csvHeader;\n    let columns = [];\n\n    for (let i = 0; i < csvHeader.length; i++) {\n      let headerElement = {\n        Header: csvHeader[i].Header,\n        accessor: csvHeader[i].accessor,\n        filterable: true,\n        filterMethod: (filter, row) => row[filter.id] && parseInt(row[filter.id]) <= parseInt(filter.value)\n      };\n      columns.push(headerElement);\n    }\n\n    return columns;\n  }\n\n  resizeEvent() {\n    this.setState({\n      height: window.innerHeight\n    });\n  }\n\n  render() {\n    const _this$state5 = this.state,\n          height = _this$state5.height,\n          csvHeader = _this$state5.csvHeader,\n          csvData = _this$state5.csvData,\n          loading = _this$state5.loading,\n          authorized = _this$state5.authorized,\n          filterMethod = _this$state5.filterMethod,\n          filterMethodString = _this$state5.filterMethodString,\n          csvName = _this$state5.csvName;\n    const classes = this.props.classes;\n\n    if (!authorized) {\n      return React.createElement(Auth, {\n        authEvent: this.authEvent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 0,\n      style: {\n        height: height\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      style: {\n        height: \"8%\",\n        backgroundColor: \"#ffffff\",\n        zIndex: 200\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"weFantastic\",\n      src: logo,\n      style: {\n        width: \"160px\",\n        marginTop: \"10px\",\n        marginLeft: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginTop: \"8px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }, React.createElement(CSVReader, {\n      cssClass: \"csv-reader-input\",\n      label: \"+ Add New Csv File\",\n      onFileLoaded: this.uploadCsv,\n      onError: this.handleDarkSideForce,\n      inputId: \"csv\",\n      inputStyle: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      container: true,\n      style: {\n        height: \"92%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      style: {\n        height: \"10%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }, React.createElement(SearchComponent, {\n      searchEvent: this.searchEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      container: true,\n      className: classes.csvContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }, React.createElement(List, {\n      component: \"nav\",\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    }, this.renderCsvItems()))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      className: classes.rhsMain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }, loading && React.createElement(\"div\", {\n      style: {\n        position: \"absolute\",\n        textAlign: \"center\",\n        left: \"55%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      className: classes.progress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    })), React.createElement(Csv, {\n      csvName: csvName,\n      csvHeader: csvHeader,\n      csvData: csvData,\n      putDataToDB: this.putDataToDB,\n      deleteFromDB: this.deleteFromDB,\n      updateDB: this.updateDB,\n      filterMethod: filterMethod,\n      filterMethodString: filterMethodString,\n      changeFilterMethod: this.changeFilterMethod,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default withStyles(styles)(Cms);","map":{"version":3,"sources":["/Users/barinozmen/CsvAnalyzer/front-end/src/pages/Cms.js"],"names":["React","Component","withStyles","Grid","CircularProgress","Csv","makeCsvData","CSVReader","logo","SearchComponent","Auth","ListItem","List","axios","moment","CryptoJS","baseUrl","username","password","styles","theme","root","flexGrow","overflow","menu","backgroundColor","height","rhsHeader","alignItems","display","marginLeft","fontSize","fontWeight","fontStyle","fontStretch","lineHeight","letterSpacing","color","rhsMain","padding","menuHeaderText","menuListItem","csvListItem","csvContainer","listItem","width","margin","WebkitLineClamp","WebkitBoxOrient","textOverflow","progress","Cms","constructor","props","getDataFromDb","key","state","csvList","token","setState","loading","csvData","csvHeader","hashString","unix","hash","generateHash","fetch","then","data","json","res","body","columns","csvName","name","putDataToDB","searchQuery","currentIds","map","id","idToBeAdded","includes","post","param","response","getCsvListFromDb","catch","err","console","log","text","deleteFromDB","selectedItem","uploadCsv","event","fileName","accessors","csvBody","i","length","headerElement","Header","accessor","filterable","filterMethod","filter","row","startsWith","value","push","tempArray","j","changeFilterMethod","filterName","getFilterStartsWith","getFilterIncludes","getFil","searchEvent","authEvent","str1","str2","localStorage","setItem","authorized","setTimeout","window","alert","onSelectMenuItem","renderCsvItems","classes","item","csvItem","substring","filterMethodString","componentDidMount","resizeEvent","addEventListener","getItem","AES","encrypt","JSON","stringify","encodeURIComponent","componentWillUnmount","intervalIsSet","clearInterval","handleDarkSideForce","getFilterNotIncludes","indexOf","getFilterBigerThan","parseInt","getFilterLowerThan","innerHeight","render","zIndex","marginTop","position","textAlign","left","updateDB"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { Grid, CircularProgress } from \"@material-ui/core/es\";\nimport Csv from \"../components/Csv\";\nimport { makeCsvData } from \"../utils/Utils\";\nimport CSVReader from \"react-csv-reader\";\nimport logo from \"../assets/images/wpwflogo.png\";\nimport SearchComponent from \"../components/SearchComponent\";\nimport Auth from \"../components/Auth\";\nimport { ListItem, List } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport CryptoJS from \"crypto-js\";\n\nconst baseUrl = \"http://localhost:3001/api/\";\nconst username = \"5342745714\";\nconst password = \"password\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    overflow: \"hidden\"\n  },\n  menu: {\n    backgroundColor: \"#ffffff\",\n    height: \"100%\"\n  },\n  rhsHeader: {\n    backgroundColor: \"#ffffff\",\n    height: \"100%\",\n    alignItems: \"center\",\n    display: \"flex\",\n    marginLeft: \"40px\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n    fontStyle: \"normal\",\n    fontStretch: \"normal\",\n    lineHeight: \"0.92\",\n    letterSpacing: \"1px\",\n    color: \"#ffffff\"\n  },\n  rhsMain: {\n    backgroundColor: \"#f4f4f4\",\n    padding: 30,\n    height: \"100%\",\n    overflow: \"auto\"\n  },\n  menuHeaderText: {\n    color: \"#ffffff\",\n    height: \"100%\",\n    alignItems: \"center\",\n    display: \"flex\",\n    marginLeft: \"40px\",\n    fontSize: \"18px\",\n    fontWeight: \"normal\",\n    fontStyle: \"normal\",\n    fontStretch: \"normal\",\n    lineHeight: \"normal\"\n  },\n  menuListItem: {\n    height: \"92%\"\n  },\n  csvListItem: {\n    height: \"45px\"\n  },\n  csvContainer: {\n    height: \"90%\",\n    overflow: \"auto\"\n  },\n  listItem: {\n    fontSize: \"16px\",\n    display: \"-webkit-box\",\n    width: \"100%\",\n    margin: \"0 auto\",\n    WebkitLineClamp: \"2\",\n    WebkitBoxOrient: \"vertical\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\"\n  },\n  progress: {}\n});\n\nclass Cms extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      height: null,\n      csvHeader: null,\n      csvData: null,\n      filterMethodString: \"\",\n      filterMethod: 0,\n      searchQuery: \"\",\n      selectedItem: null,\n      csvList: [],\n      csvName: null,\n      id: 0,\n      loading: false,\n      authorized: false,\n      token: \"\",\n      event: null\n    };\n  }\n\n  getDataFromDb = key => {\n    const { csvList, token } = this.state;\n\n    this.setState({ loading: true, csvData: null, csvHeader: null });\n\n    let hashString = token + moment().unix();\n\n    let hash = this.generateHash(hashString);\n\n    fetch(`${baseUrl}getData?name=${csvList[key]}&param=${hash}`)\n      .then(data => data.json())\n      .then(res => {\n        this.setState({\n          csvData: res.data.data.body,\n          csvHeader: res.data.data.columns,\n          csvName: res.data.data.name,\n          loading: false\n        });\n      });\n  };\n\n  // our put method that uses our backend api\n  // to create new query into our data base\n  putDataToDB = (csvName, csvData, csvHeader) => {\n    const { csvList, searchQuery, token } = this.state;\n\n    let currentIds = csvList.map(data => data.id);\n    let idToBeAdded = 0;\n    while (currentIds.includes(idToBeAdded)) {\n      ++idToBeAdded;\n    }\n\n    this.setState({ loading: true });\n\n    let hashString = token + moment().unix();\n\n    let hash = this.generateHash(hashString);\n\n    axios\n      .post(`${baseUrl}putData?param=${hash}`, {\n        id: idToBeAdded,\n        name: csvName,\n        columns: csvHeader,\n        body: csvData,\n        param: hash\n      })\n      .then(response => {\n        this.getCsvListFromDb(searchQuery);\n        this.setState({ loading: false });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ loading: false });\n      });\n  };\n\n  getCsvListFromDb = text => {\n    const { token } = this.state;\n\n    let hashString = token + moment().unix();\n\n    let hash = this.generateHash(hashString);\n\n    fetch(`${baseUrl}listData?query=${text}&param=${hash}`)\n      .then(data => data.json())\n      .then(res => {\n        this.setState({ csvList: res.data });\n        this.setState({ loading: false });\n      });\n  };\n\n  // our delete method that uses our backend api\n  // to remove existing database information\n  deleteFromDB = () => {\n    const { csvName, searchQuery, token } = this.state;\n\n    this.setState({ loading: true });\n\n    let hashString = token + moment().unix();\n\n    let hash = this.generateHash(hashString);\n\n    fetch(`${baseUrl}deleteData?name=${csvName}&param=${hash}`)\n      .then(response => {\n        this.getCsvListFromDb(searchQuery);\n        this.setState({\n          loading: false,\n          selectedItem: null,\n          csvData: null,\n          csvHeader: null\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ loading: false });\n      });\n  };\n\n  componentDidMount() {\n    const { searchQuery } = this.state;\n    this.resizeEvent();\n    window.addEventListener(\"resize\", () => this.resizeEvent());\n\n    if (\n      localStorage.getItem(\"username\") === username &&\n      localStorage.getItem(\"password\") === password\n    ) {\n      this.setState({\n        authorized: true,\n        token:\n          localStorage.getItem(\"username\") + localStorage.getItem(\"password\")\n      });\n    }\n\n    setTimeout(() => {\n      this.getCsvListFromDb(searchQuery);\n    }, 1000);\n  }\n\n  generateHash(text) {\n    var hash = CryptoJS.AES.encrypt(JSON.stringify(text), \"Mine Secret\");\n\n    return encodeURIComponent(hash);\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n    }\n  }\n\n  uploadCsv = (event, fileName) => {\n    if (!event) {\n      return;\n    }\n\n    console.log(\"event coming throug\", event[0]);\n\n    let columns = [];\n    let accessors = [];\n    let csvBody = [];\n\n    for (let i = 0; i < event[0].length; i++) {\n      let headerElement = {\n        Header: event[0][i],\n        accessor: event[0][i],\n        filterable: true,\n        filterMethod: (filter, row) =>\n          row[filter.id] && row[filter.id].startsWith(filter.value)\n      };\n      columns.push(headerElement);\n      accessors.push(event[0][i]);\n    }\n\n    console.log(\"columns\", columns);\n\n    for (let i = 1; i < event.length; i++) {\n      let tempArray = [];\n      for (let j = 0; j < event[0].length; j++) {\n        tempArray.push(event[i][j]);\n      }\n      csvBody.push(tempArray);\n    }\n\n    this.setState({\n      csvHeader: columns,\n      csvData: makeCsvData(csvBody, accessors),\n      loading: false,\n      selectedItem: null,\n      csvName: fileName,\n      event: event\n    });\n  };\n\n  handleDarkSideForce() {\n    console.log(\"DARKSIDE\");\n  }\n\n  changeFilterMethod = (i, filterName) => {\n    const { csvHeader } = this.state;\n\n    if (!csvHeader) {\n      return;\n    }\n\n    let columns = [];\n    if (i === 0) {\n      columns = this.getFilterStartsWith();\n    } else if (i === 1) {\n      columns = this.getFilterIncludes();\n    } else if (i === 2) {\n      columns = this.getFil();\n    } else if (i === 3) {\n      columns = this.getFilterStartsWith();\n    } else if (i === 4) {\n      columns = this.getFilterStartsWith();\n    }\n\n    this.setState({ csvHeader: columns });\n  };\n\n  getFilterStartsWith() {\n    const { csvHeader } = this.state;\n\n    let columns = [];\n    for (let i = 0; i < csvHeader.length; i++) {\n      let headerElement = {\n        Header: csvHeader[i].Header,\n        accessor: csvHeader[i].accessor,\n        filterable: true,\n        filterMethod: (filter, row) =>\n          row[filter.id] && row[filter.id].startsWith(filter.value)\n      };\n      columns.push(headerElement);\n    }\n    return columns;\n  }\n\n  getFilterIncludes() {\n    const { csvHeader } = this.state;\n\n    let columns = [];\n    for (let i = 0; i < csvHeader.length; i++) {\n      let headerElement = {\n        Header: csvHeader[i].Header,\n        accessor: csvHeader[i].accessor,\n        filterable: true,\n        filterMethod: (filter, row) =>\n          row[filter.id] && row[filter.id].includes(filter.value)\n      };\n      columns.push(headerElement);\n    }\n    return columns;\n  }\n\n  getFilterNotIncludes() {\n    const { csvHeader } = this.state;\n\n    let columns = [];\n    for (let i = 0; i < csvHeader.length; i++) {\n      let headerElement = {\n        Header: csvHeader[i].Header,\n        accessor: csvHeader[i].accessor,\n        filterable: true,\n        filterMethod: (filter, row) =>\n          row[filter.id] && row[filter.id].indexOf(filter.value) === -1\n      };\n      columns.push(headerElement);\n    }\n    return columns;\n  }\n\n  getFilterBigerThan() {\n    const { csvHeader } = this.state;\n\n    let columns = [];\n    for (let i = 0; i < csvHeader.length; i++) {\n      let headerElement = {\n        Header: csvHeader[i].Header,\n        accessor: csvHeader[i].accessor,\n        filterable: true,\n        filterMethod: (filter, row) =>\n          row[filter.id] && parseInt(row[filter.id]) >= parseInt(filter.value)\n      };\n      columns.push(headerElement);\n    }\n    return columns;\n  }\n\n  getFilterLowerThan() {\n    const { csvHeader } = this.state;\n\n    let columns = [];\n    for (let i = 0; i < csvHeader.length; i++) {\n      let headerElement = {\n        Header: csvHeader[i].Header,\n        accessor: csvHeader[i].accessor,\n        filterable: true,\n        filterMethod: (filter, row) =>\n          row[filter.id] && parseInt(row[filter.id]) <= parseInt(filter.value)\n      };\n      columns.push(headerElement);\n    }\n    return columns;\n  }\n\n  searchEvent = text => {\n    this.setState({ searchQuery: text });\n    this.getCsvListFromDb(text);\n  };\n\n  authEvent = (str1, str2) => {\n    const { searchQuery } = this.state;\n\n    localStorage.setItem(\"username\", str1);\n    localStorage.setItem(\"password\", str2);\n\n    if (str1 === username && str2 === password) {\n      this.setState({ authorized: true, token: str1 + str2 });\n      setTimeout(() => {\n        this.getCsvListFromDb(searchQuery);\n      }, 1000);\n    } else {\n      window.alert(\"Wrong Credentials\");\n    }\n  };\n\n  resizeEvent() {\n    this.setState({ height: window.innerHeight });\n  }\n\n  onSelectMenuItem = key => {\n    this.setState({ selectedItem: key });\n    this.getDataFromDb(key);\n  };\n\n  renderCsvItems = () => {\n    const { classes } = this.props;\n    const { selectedItem, csvList } = this.state;\n\n    return csvList.map((item, i) => {\n      let csvItem = item.substring(0, item.length - 5);\n      return (\n        <ListItem\n          selected={selectedItem === i ? true : false}\n          divider\n          key={i}\n          className={classes.csvListItem}\n          onClick={() => this.onSelectMenuItem(i)}\n        >\n          <div className={classes.listItem}>{csvItem}</div>\n        </ListItem>\n      );\n    });\n  };\n\n  render() {\n    const {\n      height,\n      csvHeader,\n      csvData,\n      loading,\n      authorized,\n      filterMethod,\n      filterMethodString,\n      csvName\n    } = this.state;\n    const { classes } = this.props;\n\n    if (!authorized) {\n      return <Auth authEvent={this.authEvent} />;\n    }\n\n    return (\n      <div className={classes.root}>\n        <Grid container spacing={0} style={{ height: height }}>\n          <Grid\n            container\n            style={{ height: \"8%\", backgroundColor: \"#ffffff\", zIndex: 200 }}\n          >\n            <Grid item xs={4}>\n              <div>\n                <img\n                  alt=\"weFantastic\"\n                  src={logo}\n                  style={{\n                    width: \"160px\",\n                    marginTop: \"10px\",\n                    marginLeft: \"40px\"\n                  }}\n                />\n              </div>\n            </Grid>\n            <Grid item xs={6} />\n            <Grid item xs={2}>\n              <div style={{ marginTop: \"8px\" }}>\n                <CSVReader\n                  cssClass=\"csv-reader-input\"\n                  label=\"+ Add New Csv File\"\n                  onFileLoaded={this.uploadCsv}\n                  onError={this.handleDarkSideForce}\n                  inputId=\"csv\"\n                  inputStyle={{ color: \"red\" }}\n                />\n              </div>\n            </Grid>\n          </Grid>\n          <Grid container style={{ height: \"92%\" }}>\n            <Grid item xs={2} style={{ height: \"100%\" }}>\n              <Grid container style={{ height: \"10%\" }}>\n                <SearchComponent searchEvent={this.searchEvent} />\n              </Grid>\n              <Grid container className={classes.csvContainer}>\n                <List component=\"nav\" style={{ width: \"100%\" }}>\n                  {this.renderCsvItems()}\n                </List>\n              </Grid>\n            </Grid>\n            <Grid item xs={10} className={classes.rhsMain}>\n              {loading && (\n                <div\n                  style={{\n                    position: \"absolute\",\n                    textAlign: \"center\",\n                    left: \"55%\"\n                  }}\n                >\n                  <CircularProgress className={classes.progress} />\n                </div>\n              )}\n              <Csv\n                csvName={csvName}\n                csvHeader={csvHeader}\n                csvData={csvData}\n                putDataToDB={this.putDataToDB}\n                deleteFromDB={this.deleteFromDB}\n                updateDB={this.updateDB}\n                filterMethod={filterMethod}\n                filterMethodString={filterMethodString}\n                changeFilterMethod={this.changeFilterMethod}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Cms);\n"]},"metadata":{},"sourceType":"module"}