{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { componentPropType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    color: 'inherit',\n    display: 'table-row',\n    height: 48,\n    verticalAlign: 'middle',\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 'none',\n    '&$selected': {\n      backgroundColor: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.04)' // grey[100]\n      : 'rgba(255, 255, 255, 0.08)'\n    },\n    '&$hover:hover': {\n      backgroundColor: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.07)' // grey[200]\n      : 'rgba(255, 255, 255, 0.14)'\n    }\n  },\n\n  /* Styles applied to the root element if `selected={true}`. */\n  selected: {},\n\n  /* Styles applied to the root element if `hover={true}`. */\n  hover: {},\n\n  /* Styles applied to the root element if table variant = 'head'. */\n  head: {\n    height: 56\n  },\n\n  /* Styles applied to the root element if table variant = 'footer'. */\n  footer: {\n    height: 56\n  }\n});\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nfunction TableRow(props) {\n  const classes = props.classes,\n        classNameProp = props.className,\n        Component = props.component,\n        hover = props.hover,\n        selected = props.selected,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"component\", \"hover\", \"selected\"]);\n\n  return React.createElement(Tablelvl2Context.Consumer, null, tablelvl2 => {\n    const className = classNames(classes.root, {\n      [classes.head]: tablelvl2 && tablelvl2.variant === 'head',\n      [classes.footer]: tablelvl2 && tablelvl2.variant === 'footer',\n      [classes.hover]: hover,\n      [classes.selected]: selected\n    }, classNameProp);\n    return React.createElement(Component, _extends({\n      className: className\n    }, other));\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes = {\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: componentPropType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   */\n  selected: PropTypes.bool\n} : void 0;\nTableRow.defaultProps = {\n  component: 'tr',\n  hover: false,\n  selected: false\n};\nexport default withStyles(styles, {\n  name: 'MuiTableRow'\n})(TableRow);","map":null,"metadata":{},"sourceType":"module"}