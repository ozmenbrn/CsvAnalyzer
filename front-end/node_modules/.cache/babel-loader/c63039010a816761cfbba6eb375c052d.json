{"ast":null,"code":"var _jsxFileName = \"/Users/barinozmen/CsvAnalyzer/csv-analyzer/src/pages/Cms.js\";\nimport React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { Grid } from \"@material-ui/core/es\";\nimport Csv from \"../components/Csv\";\nimport { makeCsvData } from \"../utils/Utils\";\nimport CSVReader from \"react-csv-reader\";\nimport logo from \"../assets/images/wpwflogo.png\";\nimport SearchComponent from \"../components/SearchComponent\";\nimport { ListItem, List } from \"@material-ui/core\";\nimport axios from \"axios\";\nconst styles = {\n  root: {\n    flexGrow: 1,\n    overflow: \"hidden\"\n  },\n  menu: {\n    backgroundColor: \"#ffffff\",\n    height: \"100%\"\n  },\n  rhsHeader: {\n    backgroundColor: \"#ffffff\",\n    height: \"100%\",\n    alignItems: \"center\",\n    display: \"flex\",\n    marginLeft: \"40px\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n    fontStyle: \"normal\",\n    fontStretch: \"normal\",\n    lineHeight: \"0.92\",\n    letterSpacing: \"1px\",\n    color: \"#ffffff\"\n  },\n  rhsMain: {\n    backgroundColor: \"#f4f4f4\",\n    padding: 30,\n    height: \"100%\",\n    overflow: \"auto\"\n  },\n  menuHeaderText: {\n    color: \"#ffffff\",\n    height: \"100%\",\n    alignItems: \"center\",\n    display: \"flex\",\n    marginLeft: \"40px\",\n    fontSize: \"18px\",\n    fontWeight: \"normal\",\n    fontStyle: \"normal\",\n    fontStretch: \"normal\",\n    lineHeight: \"normal\"\n  },\n  menuListItem: {\n    height: \"92%\"\n  },\n  csvListItem: {\n    height: \"45px\"\n  },\n  csvContainer: {\n    height: \"90%\",\n    overflow: \"auto\"\n  },\n  listItem: {\n    fontSize: \"16px\",\n    display: \"-webkit-box\",\n    width: \"100%\",\n    margin: \"0 auto\",\n    WebkitLineClamp: \"2\",\n    WebkitBoxOrient: \"vertical\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\"\n  }\n};\n\nclass Cms extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getDataFromDb = key => {\n      const data = this.state.data;\n      console.log(data[key]);\n      /*fetch(\"http://localhost:3001/api/getData\", params: { name: data[key] })\n        .then(data => data.json())\n        .then(res => this.setState({ csvData: res.data }));*/\n\n      axios.get(\"http://localhost:3001/api/getData\", {\n        params: {\n          name: data[key]\n        }\n      }).then(data => data.json()).then(res => this.setState({\n        csvData: res.data\n      }));\n    };\n\n    this.putDataToDB = (csvName, csvData, csvHeader) => {\n      let currentIds = this.state.data.map(data => data.id);\n      let idToBeAdded = 0;\n\n      while (currentIds.includes(idToBeAdded)) {\n        ++idToBeAdded;\n      }\n\n      axios.post(\"http://localhost:3001/api/putData\", {\n        id: idToBeAdded,\n        name: csvName,\n        columns: csvHeader,\n        body: csvData\n      });\n      setTimeout(() => {\n        this.getCsvListFromDb();\n      }, 3000);\n    };\n\n    this.getCsvListFromDb = () => {\n      fetch(\"http://localhost:3001/api/listData\").then(data => data.json()).then(res => this.setState({\n        data: res.data\n      }));\n    };\n\n    this.deleteFromDB = idTodelete => {\n      let objIdToDelete = null;\n      this.state.data.forEach(dat => {\n        if (dat.id === idTodelete) {\n          objIdToDelete = dat._id;\n        }\n      });\n      axios.delete(\"http://localhost:3001/api/deleteData\", {\n        data: {\n          id: objIdToDelete\n        }\n      });\n    };\n\n    this.updateDB = (idToUpdate, updateToApply) => {\n      let objIdToUpdate = null;\n      this.state.data.forEach(dat => {\n        if (dat.id === idToUpdate) {\n          objIdToUpdate = dat._id;\n        }\n      });\n      axios.post(\"http://localhost:3001/api/updateData\", {\n        id: objIdToUpdate,\n        update: {\n          csvName: updateToApply\n        }\n      });\n    };\n\n    this.uploadCsv = event => {\n      if (!event) {\n        return;\n      }\n\n      let columns = [];\n      let accessors = [];\n      let csvBody = [];\n\n      for (let i = 0; i < event[0].length; i++) {\n        let headerElement = {\n          Header: event[0][i],\n          accessor: event[0][i],\n          filterable: true,\n          filterMethod: (filter, row) => // row[filter.id].endsWith(filter.value) &&\n          row[filter.id].startsWith(filter.value)\n        };\n        columns.push(headerElement);\n        accessors.push(event[0][i]);\n      }\n\n      for (let i = 1; i < event.length; i++) {\n        let tempArray = [];\n\n        for (let j = 0; j < event[0].length; j++) {\n          tempArray.push(event[i][j]);\n        }\n\n        csvBody.push(tempArray);\n      }\n\n      this.setState({\n        csvHeader: columns,\n        csvData: makeCsvData(csvBody, accessors)\n      });\n    };\n\n    this.searchEvent = text => {\n      this.setState({\n        searchQuery: text\n      });\n    };\n\n    this.onSelectMenuItem = key => {\n      this.setState({\n        selectedItem: key\n      });\n      this.getDataFromDb(key);\n    };\n\n    this.renderCsvItems = () => {\n      const classes = this.props.classes;\n      const _this$state = this.state,\n            selectedItem = _this$state.selectedItem,\n            data = _this$state.data;\n      return data.map((item, i) => {\n        return React.createElement(ListItem, {\n          selected: selectedItem === i ? true : false,\n          divider: true,\n          key: i,\n          className: classes.csvListItem,\n          onClick: () => this.onSelectMenuItem(i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: classes.listItem,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253\n          },\n          __self: this\n        }, item));\n      });\n    };\n\n    this.state = {\n      height: null,\n      csvHeader: null,\n      csvData: null,\n      filterMethodString: \"Starts With\",\n      filterMethod: 0,\n      searchQuery: \"\",\n      selectedItem: null,\n      data: [],\n      id: 0,\n      csvName: null,\n      intervalIsSet: false,\n      idToDelete: null,\n      idToUpdate: null,\n      objectToUpdate: null,\n      modalOpen: false\n    };\n  }\n\n  componentDidMount() {\n    this.resizeEvent();\n    window.addEventListener(\"resize\", () => this.resizeEvent());\n    this.getCsvListFromDb();\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n    }\n  }\n\n  handleDarkSideForce() {\n    console.log(\"DARKSIDE\");\n  }\n\n  resizeEvent() {\n    this.setState({\n      height: window.innerHeight\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          height = _this$state2.height,\n          csvHeader = _this$state2.csvHeader,\n          csvData = _this$state2.csvData;\n    const classes = this.props.classes;\n    console.log(\"RENDER\", csvData);\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 0,\n      style: {\n        height: height\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      style: {\n        height: \"8%\",\n        backgroundColor: \"#ffffff\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"weFantastic\",\n      src: logo,\n      style: {\n        width: \"160px\",\n        marginTop: \"10px\",\n        marginLeft: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginTop: \"8px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(CSVReader, {\n      cssClass: \"csv-reader-input\",\n      label: \"+ Add New Csv File\",\n      onFileLoaded: this.uploadCsv,\n      onError: this.handleDarkSideForce,\n      inputId: \"csv\",\n      inputStyle: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      container: true,\n      style: {\n        height: \"92%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      style: {\n        height: \"10%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(SearchComponent, {\n      searchEvent: this.searchEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      container: true,\n      className: classes.csvContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(List, {\n      component: \"nav\",\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, this.renderCsvItems()))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      className: classes.rhsMain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(Csv, {\n      csvHeader: csvHeader,\n      csvData: csvData,\n      putDataToDB: this.putDataToDB,\n      deleteFromDB: this.deleteFromDB,\n      updateDB: this.updateDB,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default withStyles(styles)(Cms);","map":{"version":3,"sources":["/Users/barinozmen/CsvAnalyzer/csv-analyzer/src/pages/Cms.js"],"names":["React","Component","withStyles","Grid","Csv","makeCsvData","CSVReader","logo","SearchComponent","ListItem","List","axios","styles","root","flexGrow","overflow","menu","backgroundColor","height","rhsHeader","alignItems","display","marginLeft","fontSize","fontWeight","fontStyle","fontStretch","lineHeight","letterSpacing","color","rhsMain","padding","menuHeaderText","menuListItem","csvListItem","csvContainer","listItem","width","margin","WebkitLineClamp","WebkitBoxOrient","textOverflow","Cms","constructor","props","getDataFromDb","key","data","state","console","log","get","params","name","then","json","res","setState","csvData","putDataToDB","csvName","csvHeader","currentIds","map","id","idToBeAdded","includes","post","columns","body","setTimeout","getCsvListFromDb","fetch","deleteFromDB","idTodelete","objIdToDelete","forEach","dat","_id","delete","updateDB","idToUpdate","updateToApply","objIdToUpdate","update","uploadCsv","event","accessors","csvBody","i","length","headerElement","Header","accessor","filterable","filterMethod","filter","row","startsWith","value","push","tempArray","j","searchEvent","text","searchQuery","onSelectMenuItem","selectedItem","renderCsvItems","classes","item","filterMethodString","intervalIsSet","idToDelete","objectToUpdate","modalOpen","componentDidMount","resizeEvent","window","addEventListener","componentWillUnmount","clearInterval","handleDarkSideForce","innerHeight","render","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { Grid } from \"@material-ui/core/es\";\nimport Csv from \"../components/Csv\";\nimport { makeCsvData } from \"../utils/Utils\";\nimport CSVReader from \"react-csv-reader\";\nimport logo from \"../assets/images/wpwflogo.png\";\nimport SearchComponent from \"../components/SearchComponent\";\nimport { ListItem, List } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n    overflow: \"hidden\"\n  },\n  menu: {\n    backgroundColor: \"#ffffff\",\n    height: \"100%\"\n  },\n  rhsHeader: {\n    backgroundColor: \"#ffffff\",\n    height: \"100%\",\n    alignItems: \"center\",\n    display: \"flex\",\n    marginLeft: \"40px\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n    fontStyle: \"normal\",\n    fontStretch: \"normal\",\n    lineHeight: \"0.92\",\n    letterSpacing: \"1px\",\n    color: \"#ffffff\"\n  },\n  rhsMain: {\n    backgroundColor: \"#f4f4f4\",\n    padding: 30,\n    height: \"100%\",\n    overflow: \"auto\"\n  },\n  menuHeaderText: {\n    color: \"#ffffff\",\n    height: \"100%\",\n    alignItems: \"center\",\n    display: \"flex\",\n    marginLeft: \"40px\",\n    fontSize: \"18px\",\n    fontWeight: \"normal\",\n    fontStyle: \"normal\",\n    fontStretch: \"normal\",\n    lineHeight: \"normal\"\n  },\n  menuListItem: {\n    height: \"92%\"\n  },\n  csvListItem: {\n    height: \"45px\"\n  },\n  csvContainer: {\n    height: \"90%\",\n    overflow: \"auto\"\n  },\n  listItem: {\n    fontSize: \"16px\",\n    display: \"-webkit-box\",\n    width: \"100%\",\n    margin: \"0 auto\",\n    WebkitLineClamp: \"2\",\n    WebkitBoxOrient: \"vertical\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\"\n  }\n};\n\nclass Cms extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      height: null,\n      csvHeader: null,\n      csvData: null,\n      filterMethodString: \"Starts With\",\n      filterMethod: 0,\n      searchQuery: \"\",\n      selectedItem: null,\n      data: [],\n      id: 0,\n      csvName: null,\n      intervalIsSet: false,\n      idToDelete: null,\n      idToUpdate: null,\n      objectToUpdate: null,\n      modalOpen: false\n    };\n  }\n\n  getDataFromDb = key => {\n    const { data } = this.state;\n    console.log(data[key]);\n\n    /*fetch(\"http://localhost:3001/api/getData\", params: { name: data[key] })\n      .then(data => data.json())\n      .then(res => this.setState({ csvData: res.data }));*/\n\n    axios\n      .get(\"http://localhost:3001/api/getData\", {\n        params: { name: data[key] }\n      })\n      .then(data => data.json())\n      .then(res => this.setState({ csvData: res.data }));\n  };\n\n  // our put method that uses our backend api\n  // to create new query into our data base\n  putDataToDB = (csvName, csvData, csvHeader) => {\n    let currentIds = this.state.data.map(data => data.id);\n    let idToBeAdded = 0;\n    while (currentIds.includes(idToBeAdded)) {\n      ++idToBeAdded;\n    }\n\n    axios.post(\"http://localhost:3001/api/putData\", {\n      id: idToBeAdded,\n      name: csvName,\n      columns: csvHeader,\n      body: csvData\n    });\n\n    setTimeout(() => {\n      this.getCsvListFromDb();\n    }, 3000);\n  };\n\n  getCsvListFromDb = () => {\n    fetch(\"http://localhost:3001/api/listData\")\n      .then(data => data.json())\n      .then(res => this.setState({ data: res.data }));\n  };\n\n  // our delete method that uses our backend api\n  // to remove existing database information\n  deleteFromDB = idTodelete => {\n    let objIdToDelete = null;\n    this.state.data.forEach(dat => {\n      if (dat.id === idTodelete) {\n        objIdToDelete = dat._id;\n      }\n    });\n\n    axios.delete(\"http://localhost:3001/api/deleteData\", {\n      data: {\n        id: objIdToDelete\n      }\n    });\n  };\n\n  // our update method that uses our backend api\n  // to overwrite existing data base information\n  updateDB = (idToUpdate, updateToApply) => {\n    let objIdToUpdate = null;\n    this.state.data.forEach(dat => {\n      if (dat.id === idToUpdate) {\n        objIdToUpdate = dat._id;\n      }\n    });\n\n    axios.post(\"http://localhost:3001/api/updateData\", {\n      id: objIdToUpdate,\n      update: { csvName: updateToApply }\n    });\n  };\n\n  componentDidMount() {\n    this.resizeEvent();\n    window.addEventListener(\"resize\", () => this.resizeEvent());\n\n    this.getCsvListFromDb();\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n    }\n  }\n\n  uploadCsv = event => {\n    if (!event) {\n      return;\n    }\n\n    let columns = [];\n    let accessors = [];\n    let csvBody = [];\n\n    for (let i = 0; i < event[0].length; i++) {\n      let headerElement = {\n        Header: event[0][i],\n        accessor: event[0][i],\n        filterable: true,\n        filterMethod: (filter, row) =>\n          // row[filter.id].endsWith(filter.value) &&\n          row[filter.id].startsWith(filter.value)\n      };\n      columns.push(headerElement);\n      accessors.push(event[0][i]);\n    }\n\n    for (let i = 1; i < event.length; i++) {\n      let tempArray = [];\n      for (let j = 0; j < event[0].length; j++) {\n        tempArray.push(event[i][j]);\n      }\n      csvBody.push(tempArray);\n    }\n\n    this.setState({\n      csvHeader: columns,\n      csvData: makeCsvData(csvBody, accessors)\n    });\n  };\n\n  handleDarkSideForce() {\n    console.log(\"DARKSIDE\");\n  }\n\n  searchEvent = text => {\n    this.setState({ searchQuery: text });\n  };\n\n  resizeEvent() {\n    this.setState({ height: window.innerHeight });\n  }\n\n  onSelectMenuItem = key => {\n    this.setState({ selectedItem: key });\n    this.getDataFromDb(key);\n  };\n\n  renderCsvItems = () => {\n    const { classes } = this.props;\n    const { selectedItem, data } = this.state;\n\n    return data.map((item, i) => {\n      return (\n        <ListItem\n          selected={selectedItem === i ? true : false}\n          divider\n          key={i}\n          className={classes.csvListItem}\n          onClick={() => this.onSelectMenuItem(i)}\n        >\n          <div className={classes.listItem}>{item}</div>\n        </ListItem>\n      );\n    });\n  };\n\n  render() {\n    const { height, csvHeader, csvData } = this.state;\n    const { classes } = this.props;\n\n    console.log(\"RENDER\", csvData);\n\n    return (\n      <div className={classes.root}>\n        <Grid container spacing={0} style={{ height: height }}>\n          <Grid container style={{ height: \"8%\", backgroundColor: \"#ffffff\" }}>\n            <Grid item xs={4}>\n              <div>\n                <img\n                  alt=\"weFantastic\"\n                  src={logo}\n                  style={{\n                    width: \"160px\",\n                    marginTop: \"10px\",\n                    marginLeft: \"40px\"\n                  }}\n                />\n              </div>\n            </Grid>\n            <Grid item xs={6} />\n            <Grid item xs={2}>\n              <div style={{ marginTop: \"8px\" }}>\n                <CSVReader\n                  cssClass=\"csv-reader-input\"\n                  label=\"+ Add New Csv File\"\n                  onFileLoaded={this.uploadCsv}\n                  onError={this.handleDarkSideForce}\n                  inputId=\"csv\"\n                  inputStyle={{ color: \"red\" }}\n                />\n              </div>\n            </Grid>\n          </Grid>\n          <Grid container style={{ height: \"92%\" }}>\n            <Grid item xs={2} style={{ height: \"100%\" }}>\n              <Grid container style={{ height: \"10%\" }}>\n                <SearchComponent searchEvent={this.searchEvent} />\n              </Grid>\n              <Grid container className={classes.csvContainer}>\n                <List component=\"nav\" style={{ width: \"100%\" }}>\n                  {this.renderCsvItems()}\n                </List>\n              </Grid>\n            </Grid>\n            <Grid item xs={10} className={classes.rhsMain}>\n              <Csv\n                csvHeader={csvHeader}\n                csvData={csvData}\n                putDataToDB={this.putDataToDB}\n                deleteFromDB={this.deleteFromDB}\n                updateDB={this.updateDB}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Cms);\n"]},"metadata":{},"sourceType":"module"}