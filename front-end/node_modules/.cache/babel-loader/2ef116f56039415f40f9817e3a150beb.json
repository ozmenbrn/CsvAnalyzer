{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '../styles/withStyles';\nimport { capitalize } from '../utils/helpers';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    height: 2,\n    bottom: 0,\n    width: '100%',\n    transition: theme.transitions.create()\n  },\n\n  /* Styles applied to the root element if `color=\"primary\"`. */\n  colorPrimary: {\n    backgroundColor: theme.palette.primary.main\n  },\n\n  /* Styles applied to the root element if `color=\"secondary\"`. */\n  colorSecondary: {\n    backgroundColor: theme.palette.secondary.main\n  }\n});\n/**\n * @ignore - internal component.\n */\n\nfunction TabIndicator(props) {\n  const classes = props.classes,\n        className = props.className,\n        color = props.color,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"color\"]);\n\n  return React.createElement(\"span\", _extends({\n    className: classNames(classes.root, classes[\"color\".concat(capitalize(color))], className)\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? TabIndicator.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   * The color of the tab indicator.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPrivateTabIndicator'\n})(TabIndicator);","map":null,"metadata":{},"sourceType":"module"}