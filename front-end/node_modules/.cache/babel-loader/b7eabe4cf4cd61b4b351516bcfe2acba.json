{"ast":null,"code":"var _jsxFileName = \"/Users/barinozmen/CsvAnalyzer/csv-analyzer/src/pages/Cms.js\";\nimport React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { Grid } from \"@material-ui/core/es\";\nimport Csv from \"../components/Csv\";\nimport { makeCsvData } from \"../utils/Utils\";\nimport CSVReader from \"react-csv-reader\";\nimport logo from \"../assets/images/wpwflogo.png\";\nimport SearchComponent from \"../components/SearchComponent\";\nimport { ListItem, List } from \"@material-ui/core\";\nimport axios from \"axios\";\nconst styles = {\n  root: {\n    flexGrow: 1,\n    overflow: \"hidden\"\n  },\n  menu: {\n    backgroundColor: \"#ffffff\",\n    height: \"100%\"\n  },\n  rhsHeader: {\n    backgroundColor: \"#ffffff\",\n    height: \"100%\",\n    alignItems: \"center\",\n    display: \"flex\",\n    marginLeft: \"40px\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n    fontStyle: \"normal\",\n    fontStretch: \"normal\",\n    lineHeight: \"0.92\",\n    letterSpacing: \"1px\",\n    color: \"#ffffff\"\n  },\n  rhsMain: {\n    backgroundColor: \"#f4f4f4\",\n    padding: 30,\n    height: \"100%\",\n    overflow: \"auto\"\n  },\n  menuHeaderText: {\n    color: \"#ffffff\",\n    height: \"100%\",\n    alignItems: \"center\",\n    display: \"flex\",\n    marginLeft: \"40px\",\n    fontSize: \"18px\",\n    fontWeight: \"normal\",\n    fontStyle: \"normal\",\n    fontStretch: \"normal\",\n    lineHeight: \"normal\"\n  },\n  menuListItem: {\n    height: \"92%\"\n  },\n  csvListItem: {\n    height: \"45px\"\n  },\n  csvContainer: {\n    height: \"90%\",\n    overflow: \"auto\"\n  },\n  listItem: {\n    fontSize: \"16px\",\n    display: \"-webkit-box\",\n    width: \"100%\",\n    margin: \"0 auto\",\n    WebkitLineClamp: \"2\",\n    WebkitBoxOrient: \"vertical\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\"\n  }\n};\n\nclass Cms extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getDataFromDb = () => {\n      console.log(\"COMONN\");\n    };\n\n    this.putDataToDB = (csvName, csvData, csvHeader) => {\n      let currentIds = this.state.data.map(data => data.id);\n      let idToBeAdded = 0;\n\n      while (currentIds.includes(idToBeAdded)) {\n        ++idToBeAdded;\n      }\n\n      console.log(csvData);\n      console.log(csvHeader);\n\n      for (let i = 0; i < csvData.length; i += 5000) {\n        let partCsv = [];\n\n        for (let j = i; j < i + 5000; j++) {\n          partCsv.push(csvData[j]);\n        }\n\n        axios.post(\"http://localhost:3001/api/putData\", {\n          id: idToBeAdded,\n          name: csvName,\n          columns: csvHeader,\n          body: partCsv\n        });\n      }\n    };\n\n    this.deleteFromDB = idTodelete => {\n      let objIdToDelete = null;\n      this.state.data.forEach(dat => {\n        if (dat.id === idTodelete) {\n          objIdToDelete = dat._id;\n        }\n      });\n      axios.delete(\"http://localhost:3001/api/deleteData\", {\n        data: {\n          id: objIdToDelete\n        }\n      });\n    };\n\n    this.updateDB = (idToUpdate, updateToApply) => {\n      const data = this.state.data;\n      let objIdToUpdate = null;\n      data.forEach(dat => {\n        if (dat.id === idToUpdate) {\n          objIdToUpdate = dat._id;\n        }\n      });\n      axios.post(\"http://localhost:3001/api/updateData\", {\n        id: objIdToUpdate,\n        update: {\n          csvName: updateToApply\n        }\n      });\n    };\n\n    this.uploadCsv = event => {\n      if (!event) {\n        return;\n      }\n\n      let columns = [];\n      let accessors = [];\n      let csvBody = [];\n\n      for (let i = 0; i < event[0].length; i++) {\n        let headerElement = {\n          Header: event[0][i],\n          accessor: event[0][i],\n          filterable: true,\n          filterMethod: (filter, row) => // row[filter.id].endsWith(filter.value) &&\n          row[filter.id].startsWith(filter.value)\n        };\n        columns.push(headerElement);\n        accessors.push(event[0][i]);\n      }\n\n      for (let i = 1; i < event.length; i++) {\n        let tempArray = [];\n\n        for (let j = 0; j < event[0].length; j++) {\n          tempArray.push(event[i][j]);\n        }\n\n        csvBody.push(tempArray);\n      } // console.log(\"HEADER COLUMN\", columns);\n      // console.log(\"BODY DATA\", makeCsvData(csvBody, accessors));\n\n\n      this.setState({\n        csvHeader: columns,\n        csvData: makeCsvData(csvBody, accessors)\n      });\n    };\n\n    this.searchEvent = text => {\n      this.setState({\n        searchQuery: text\n      });\n    };\n\n    this.onSelectMenuItem = key => {\n      this.setState({\n        selectedItem: key\n      });\n    };\n\n    this.renderCsvItems = () => {\n      const classes = this.props.classes;\n      const _this$state = this.state,\n            selectedItem = _this$state.selectedItem,\n            data = _this$state.data;\n      return data.map((item, i) => {\n        return React.createElement(ListItem, {\n          selected: selectedItem === i ? true : false,\n          divider: true,\n          key: i,\n          className: classes.csvListItem,\n          onClick: () => this.onSelectMenuItem(i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: classes.listItem,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          },\n          __self: this\n        }, item.name));\n      });\n    };\n\n    this.state = {\n      height: null,\n      csvHeader: null,\n      csvData: null,\n      filterMethodString: \"Starts With\",\n      filterMethod: 0,\n      searchQuery: \"\",\n      selectedItem: null,\n      data: [],\n      id: 0,\n      csvName: null,\n      intervalIsSet: false,\n      idToDelete: null,\n      idToUpdate: null,\n      objectToUpdate: null,\n      modalOpen: false\n    };\n  }\n\n  componentDidMount() {\n    this.resizeEvent();\n    window.addEventListener(\"resize\", () => this.resizeEvent());\n    this.getDataFromDb();\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n    }\n  }\n\n  handleDarkSideForce() {\n    console.log(\"DARKSIDE\");\n  }\n\n  resizeEvent() {\n    this.setState({\n      height: window.innerHeight\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          height = _this$state2.height,\n          csvHeader = _this$state2.csvHeader,\n          csvData = _this$state2.csvData;\n    const classes = this.props.classes;\n    console.log(this.state.data);\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 0,\n      style: {\n        height: height\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      style: {\n        height: \"8%\",\n        backgroundColor: \"#ffffff\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"weFantastic\",\n      src: logo,\n      style: {\n        width: \"160px\",\n        marginTop: \"10px\",\n        marginLeft: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginTop: \"8px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(CSVReader, {\n      cssClass: \"csv-reader-input\",\n      label: \"+ Add New Csv File\",\n      onFileLoaded: this.uploadCsv,\n      onError: this.handleDarkSideForce,\n      inputId: \"csv\",\n      inputStyle: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      container: true,\n      style: {\n        height: \"92%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      style: {\n        height: \"10%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(SearchComponent, {\n      searchEvent: this.searchEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      container: true,\n      className: classes.csvContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(List, {\n      component: \"nav\",\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, this.renderCsvItems()))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      className: classes.rhsMain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(Csv, {\n      csvHeader: csvHeader,\n      csvData: csvData,\n      putDataToDB: this.putDataToDB,\n      deleteFromDB: this.deleteFromDB,\n      updateDB: this.updateDB,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default withStyles(styles)(Cms);","map":{"version":3,"sources":["/Users/barinozmen/CsvAnalyzer/csv-analyzer/src/pages/Cms.js"],"names":["React","Component","withStyles","Grid","Csv","makeCsvData","CSVReader","logo","SearchComponent","ListItem","List","axios","styles","root","flexGrow","overflow","menu","backgroundColor","height","rhsHeader","alignItems","display","marginLeft","fontSize","fontWeight","fontStyle","fontStretch","lineHeight","letterSpacing","color","rhsMain","padding","menuHeaderText","menuListItem","csvListItem","csvContainer","listItem","width","margin","WebkitLineClamp","WebkitBoxOrient","textOverflow","Cms","constructor","props","getDataFromDb","console","log","putDataToDB","csvName","csvData","csvHeader","currentIds","state","data","map","id","idToBeAdded","includes","i","length","partCsv","j","push","post","name","columns","body","deleteFromDB","idTodelete","objIdToDelete","forEach","dat","_id","delete","updateDB","idToUpdate","updateToApply","objIdToUpdate","update","uploadCsv","event","accessors","csvBody","headerElement","Header","accessor","filterable","filterMethod","filter","row","startsWith","value","tempArray","setState","searchEvent","text","searchQuery","onSelectMenuItem","key","selectedItem","renderCsvItems","classes","item","filterMethodString","intervalIsSet","idToDelete","objectToUpdate","modalOpen","componentDidMount","resizeEvent","window","addEventListener","componentWillUnmount","clearInterval","handleDarkSideForce","innerHeight","render","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { Grid } from \"@material-ui/core/es\";\nimport Csv from \"../components/Csv\";\nimport { makeCsvData } from \"../utils/Utils\";\nimport CSVReader from \"react-csv-reader\";\nimport logo from \"../assets/images/wpwflogo.png\";\nimport SearchComponent from \"../components/SearchComponent\";\nimport { ListItem, List } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n    overflow: \"hidden\"\n  },\n  menu: {\n    backgroundColor: \"#ffffff\",\n    height: \"100%\"\n  },\n  rhsHeader: {\n    backgroundColor: \"#ffffff\",\n    height: \"100%\",\n    alignItems: \"center\",\n    display: \"flex\",\n    marginLeft: \"40px\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n    fontStyle: \"normal\",\n    fontStretch: \"normal\",\n    lineHeight: \"0.92\",\n    letterSpacing: \"1px\",\n    color: \"#ffffff\"\n  },\n  rhsMain: {\n    backgroundColor: \"#f4f4f4\",\n    padding: 30,\n    height: \"100%\",\n    overflow: \"auto\"\n  },\n  menuHeaderText: {\n    color: \"#ffffff\",\n    height: \"100%\",\n    alignItems: \"center\",\n    display: \"flex\",\n    marginLeft: \"40px\",\n    fontSize: \"18px\",\n    fontWeight: \"normal\",\n    fontStyle: \"normal\",\n    fontStretch: \"normal\",\n    lineHeight: \"normal\"\n  },\n  menuListItem: {\n    height: \"92%\"\n  },\n  csvListItem: {\n    height: \"45px\"\n  },\n  csvContainer: {\n    height: \"90%\",\n    overflow: \"auto\"\n  },\n  listItem: {\n    fontSize: \"16px\",\n    display: \"-webkit-box\",\n    width: \"100%\",\n    margin: \"0 auto\",\n    WebkitLineClamp: \"2\",\n    WebkitBoxOrient: \"vertical\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\"\n  }\n};\n\nclass Cms extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      height: null,\n      csvHeader: null,\n      csvData: null,\n      filterMethodString: \"Starts With\",\n      filterMethod: 0,\n      searchQuery: \"\",\n      selectedItem: null,\n      data: [],\n      id: 0,\n      csvName: null,\n      intervalIsSet: false,\n      idToDelete: null,\n      idToUpdate: null,\n      objectToUpdate: null,\n      modalOpen: false\n    };\n  }\n\n  getDataFromDb = () => {\n    console.log(\"COMONN\");\n  };\n\n  // our put method that uses our backend api\n  // to create new query into our data base\n  putDataToDB = (csvName, csvData, csvHeader) => {\n    let currentIds = this.state.data.map(data => data.id);\n    let idToBeAdded = 0;\n    while (currentIds.includes(idToBeAdded)) {\n      ++idToBeAdded;\n    }\n\n    console.log(csvData);\n    console.log(csvHeader);\n    for (let i = 0; i < csvData.length; i += 5000) {\n      let partCsv = [];\n      for (let j = i; j < i + 5000; j++) {\n        partCsv.push(csvData[j]);\n      }\n      axios.post(\"http://localhost:3001/api/putData\", {\n        id: idToBeAdded,\n        name: csvName,\n        columns: csvHeader,\n        body: partCsv\n      });\n    }\n  };\n\n  // our delete method that uses our backend api\n  // to remove existing database information\n  deleteFromDB = idTodelete => {\n    let objIdToDelete = null;\n    this.state.data.forEach(dat => {\n      if (dat.id === idTodelete) {\n        objIdToDelete = dat._id;\n      }\n    });\n\n    axios.delete(\"http://localhost:3001/api/deleteData\", {\n      data: {\n        id: objIdToDelete\n      }\n    });\n  };\n\n  // our update method that uses our backend api\n  // to overwrite existing data base information\n  updateDB = (idToUpdate, updateToApply) => {\n    const { data } = this.state; \n    let objIdToUpdate = null;\n\n    data.forEach(dat => {\n      if (dat.id === idToUpdate) {\n        objIdToUpdate = dat._id;\n      }\n    });\n\n    axios.post(\"http://localhost:3001/api/updateData\", {\n      id: objIdToUpdate,\n      update: { csvName: updateToApply }\n    });\n  };\n\n  componentDidMount() {\n    this.resizeEvent();\n    window.addEventListener(\"resize\", () => this.resizeEvent());\n\n    this.getDataFromDb();\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n    }\n  }\n\n  uploadCsv = event => {\n    if (!event) {\n      return;\n    }\n\n    let columns = [];\n    let accessors = [];\n    let csvBody = [];\n\n    for (let i = 0; i < event[0].length; i++) {\n      let headerElement = {\n        Header: event[0][i],\n        accessor: event[0][i],\n        filterable: true,\n        filterMethod: (filter, row) =>\n          // row[filter.id].endsWith(filter.value) &&\n          row[filter.id].startsWith(filter.value)\n      };\n      columns.push(headerElement);\n      accessors.push(event[0][i]);\n    }\n\n    for (let i = 1; i < event.length; i++) {\n      let tempArray = [];\n      for (let j = 0; j < event[0].length; j++) {\n        tempArray.push(event[i][j]);\n      }\n      csvBody.push(tempArray);\n    }\n\n    // console.log(\"HEADER COLUMN\", columns);\n    // console.log(\"BODY DATA\", makeCsvData(csvBody, accessors));\n\n    this.setState({\n      csvHeader: columns,\n      csvData: makeCsvData(csvBody, accessors)\n    });\n  };\n\n  handleDarkSideForce() {\n    console.log(\"DARKSIDE\");\n  }\n\n  searchEvent = text => {\n    this.setState({ searchQuery: text });\n  };\n\n  resizeEvent() {\n    this.setState({ height: window.innerHeight });\n  }\n\n  onSelectMenuItem = key => {\n    this.setState({ selectedItem: key });\n  };\n\n  renderCsvItems = () => {\n    const { classes } = this.props;\n    const { selectedItem, data } = this.state;\n\n    return data.map((item, i) => {\n      return (\n        <ListItem\n          selected={selectedItem === i ? true : false}\n          divider\n          key={i}\n          className={classes.csvListItem}\n          onClick={() => this.onSelectMenuItem(i)}\n        >\n          <div className={classes.listItem}>{item.name}</div>\n        </ListItem>\n      );\n    });\n  };\n\n  render() {\n    const { height, csvHeader, csvData } = this.state;\n    const { classes } = this.props;\n\n    console.log(this.state.data);\n\n    return (\n      <div className={classes.root}>\n        <Grid container spacing={0} style={{ height: height }}>\n          <Grid container style={{ height: \"8%\", backgroundColor: \"#ffffff\" }}>\n            <Grid item xs={4}>\n              <div>\n                <img\n                  alt=\"weFantastic\"\n                  src={logo}\n                  style={{\n                    width: \"160px\",\n                    marginTop: \"10px\",\n                    marginLeft: \"40px\"\n                  }}\n                />\n              </div>\n            </Grid>\n            <Grid item xs={6} />\n            <Grid item xs={2}>\n              <div style={{ marginTop: \"8px\" }}>\n                <CSVReader\n                  cssClass=\"csv-reader-input\"\n                  label=\"+ Add New Csv File\"\n                  onFileLoaded={this.uploadCsv}\n                  onError={this.handleDarkSideForce}\n                  inputId=\"csv\"\n                  inputStyle={{ color: \"red\" }}\n                />\n              </div>\n            </Grid>\n          </Grid>\n          <Grid container style={{ height: \"92%\" }}>\n            <Grid item xs={2} style={{ height: \"100%\" }}>\n              <Grid container style={{ height: \"10%\" }}>\n                <SearchComponent searchEvent={this.searchEvent} />\n              </Grid>\n              <Grid container className={classes.csvContainer}>\n                <List component=\"nav\" style={{ width: \"100%\" }}>\n                  {this.renderCsvItems()}\n                </List>\n              </Grid>\n            </Grid>\n            <Grid item xs={10} className={classes.rhsMain}>\n              <Csv\n                csvHeader={csvHeader}\n                csvData={csvData}\n                putDataToDB={this.putDataToDB}\n                deleteFromDB={this.deleteFromDB}\n                updateDB={this.updateDB}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Cms);\n"]},"metadata":{},"sourceType":"module"}