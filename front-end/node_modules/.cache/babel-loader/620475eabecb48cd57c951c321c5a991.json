{"ast":null,"code":"var _jsxFileName = \"/Users/barinozmen/CsvAnalyzer/front-end/src/pages/Cms.js\";\nimport React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { Grid, CircularProgress } from \"@material-ui/core/es\";\nimport Csv from \"../components/Csv\";\nimport { makeCsvData } from \"../utils/Utils\";\nimport CSVReader from \"react-csv-reader\";\nimport logo from \"../assets/images/wpwflogo.png\";\nimport SearchComponent from \"../components/SearchComponent\";\nimport Auth from \"../components/Auth\";\nimport { ListItem, List } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nconst baseUrl = \"http://localhost:3001/api/\";\nconst username = \"5342745714\";\nconst password = \"password\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    overflow: \"hidden\"\n  },\n  menu: {\n    backgroundColor: \"#ffffff\",\n    height: \"100%\"\n  },\n  rhsHeader: {\n    backgroundColor: \"#ffffff\",\n    height: \"100%\",\n    alignItems: \"center\",\n    display: \"flex\",\n    marginLeft: \"40px\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n    fontStyle: \"normal\",\n    fontStretch: \"normal\",\n    lineHeight: \"0.92\",\n    letterSpacing: \"1px\",\n    color: \"#ffffff\"\n  },\n  rhsMain: {\n    backgroundColor: \"#f4f4f4\",\n    padding: 30,\n    height: \"100%\",\n    overflow: \"auto\"\n  },\n  menuHeaderText: {\n    color: \"#ffffff\",\n    height: \"100%\",\n    alignItems: \"center\",\n    display: \"flex\",\n    marginLeft: \"40px\",\n    fontSize: \"18px\",\n    fontWeight: \"normal\",\n    fontStyle: \"normal\",\n    fontStretch: \"normal\",\n    lineHeight: \"normal\"\n  },\n  menuListItem: {\n    height: \"92%\"\n  },\n  csvListItem: {\n    height: \"45px\"\n  },\n  csvContainer: {\n    height: \"90%\",\n    overflow: \"auto\"\n  },\n  listItem: {\n    fontSize: \"16px\",\n    display: \"-webkit-box\",\n    width: \"100%\",\n    margin: \"0 auto\",\n    WebkitLineClamp: \"2\",\n    WebkitBoxOrient: \"vertical\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\"\n  },\n  progress: {}\n});\n\nclass Cms extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getDataFromDb = key => {\n      const csvList = this.state.csvList;\n      this.setState({\n        loading: true,\n        csvData: null,\n        csvHeader: null\n      });\n      console.log(moment().unix());\n      fetch(\"\".concat(baseUrl, \"getData?name=\").concat(csvList[key])).then(data => data.json()).then(res => {\n        this.setState({\n          csvData: res.data.data.body,\n          csvHeader: res.data.data.columns,\n          csvName: res.data.data.name,\n          loading: false\n        });\n      });\n    };\n\n    this.putDataToDB = (csvName, csvData, csvHeader) => {\n      const _this$state = this.state,\n            csvList = _this$state.csvList,\n            searchQuery = _this$state.searchQuery;\n      let currentIds = csvList.map(data => data.id);\n      let idToBeAdded = 0;\n\n      while (currentIds.includes(idToBeAdded)) {\n        ++idToBeAdded;\n      }\n\n      this.setState({\n        loading: true\n      });\n      axios.post(\"\".concat(baseUrl, \"putData\"), {\n        id: idToBeAdded,\n        name: csvName,\n        columns: csvHeader,\n        body: csvData\n      }).then(response => {\n        this.getCsvListFromDb(searchQuery);\n        this.setState({\n          loading: false\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.getCsvListFromDb = text => {\n      fetch(\"\".concat(baseUrl, \"listData?query=\").concat(text)).then(data => data.json()).then(res => {\n        this.setState({\n          csvList: res.data\n        });\n      });\n    };\n\n    this.deleteFromDB = () => {\n      const _this$state2 = this.state,\n            csvName = _this$state2.csvName,\n            searchQuery = _this$state2.searchQuery;\n      this.setState({\n        loading: true\n      });\n      fetch(\"\".concat(baseUrl, \"deleteData?name=\").concat(csvName)).then(response => {\n        this.getCsvListFromDb(searchQuery);\n        this.setState({\n          loading: false,\n          selectedItem: null,\n          csvData: null,\n          csvHeader: null\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.updateDB = (idToUpdate, updateToApply) => {\n      const csvList = this.state.csvList;\n      let objIdToUpdate = null;\n      csvList.forEach(dat => {\n        if (dat.id === idToUpdate) {\n          objIdToUpdate = dat._id;\n        }\n      });\n      axios.post(\"\".concat(baseUrl, \"updateData\"), {\n        id: objIdToUpdate,\n        update: {\n          csvName: updateToApply\n        }\n      });\n    };\n\n    this.uploadCsv = event => {\n      if (!event) {\n        return;\n      }\n\n      let columns = [];\n      let accessors = [];\n      let csvBody = [];\n\n      for (let i = 0; i < event[0].length; i++) {\n        let headerElement = {\n          Header: event[0][i],\n          accessor: event[0][i],\n          filterable: true,\n          filterMethod: (filter, row) => // row[filter.id].endsWith(filter.value) &&\n          row[filter.id].startsWith(filter.value)\n        };\n        columns.push(headerElement);\n        accessors.push(event[0][i]);\n      }\n\n      for (let i = 1; i < event.length; i++) {\n        let tempArray = [];\n\n        for (let j = 0; j < event[0].length; j++) {\n          tempArray.push(event[i][j]);\n        }\n\n        csvBody.push(tempArray);\n      }\n\n      this.setState({\n        csvHeader: columns,\n        csvData: makeCsvData(csvBody, accessors),\n        loading: false,\n        selectedItem: null\n      });\n    };\n\n    this.searchEvent = text => {\n      this.setState({\n        searchQuery: text\n      });\n      this.getCsvListFromDb(text);\n    };\n\n    this.authEvent = (str1, str2) => {\n      localStorage.setItem(\"username\", str1);\n      localStorage.setItem(\"password\", str2);\n\n      if (str1 === username && str2 === password) {\n        this.setState({\n          authorized: true,\n          token: str1 + str2\n        });\n      } else {\n        window.alert(\"Wrong Credentials\");\n      }\n    };\n\n    this.onSelectMenuItem = key => {\n      this.setState({\n        selectedItem: key\n      });\n      this.getDataFromDb(key);\n    };\n\n    this.renderCsvItems = () => {\n      const classes = this.props.classes;\n      const _this$state3 = this.state,\n            selectedItem = _this$state3.selectedItem,\n            csvList = _this$state3.csvList;\n      return csvList.map((item, i) => {\n        let csvItem = item.substring(0, item.length - 5);\n        return React.createElement(ListItem, {\n          selected: selectedItem === i ? true : false,\n          divider: true,\n          key: i,\n          className: classes.csvListItem,\n          onClick: () => this.onSelectMenuItem(i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: classes.listItem,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311\n          },\n          __self: this\n        }, csvItem));\n      });\n    };\n\n    this.state = {\n      height: null,\n      csvHeader: null,\n      csvData: null,\n      filterMethodString: \"Starts With\",\n      filterMethod: 0,\n      searchQuery: \"\",\n      selectedItem: null,\n      csvList: [],\n      csvName: null,\n      id: 0,\n      csvName: null,\n      intervalIsSet: false,\n      idToDelete: null,\n      idToUpdate: null,\n      objectToUpdate: null,\n      modalOpen: false,\n      loading: false,\n      authorized: false,\n      token: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const searchQuery = this.state.searchQuery;\n    this.resizeEvent();\n    window.addEventListener(\"resize\", () => this.resizeEvent());\n\n    if (localStorage.getItem(\"username\") === username && localStorage.getItem(\"password\") === password) {\n      this.setState({\n        authorized: true,\n        token: localStorage.getItem(\"username\") + localStorage.getItem(\"password\")\n      });\n    }\n\n    this.getCsvListFromDb(searchQuery);\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n    }\n  }\n\n  handleDarkSideForce() {\n    console.log(\"DARKSIDE\");\n  }\n\n  resizeEvent() {\n    this.setState({\n      height: window.innerHeight\n    });\n  }\n\n  render() {\n    const _this$state4 = this.state,\n          height = _this$state4.height,\n          csvHeader = _this$state4.csvHeader,\n          csvData = _this$state4.csvData,\n          loading = _this$state4.loading,\n          authorized = _this$state4.authorized;\n    const classes = this.props.classes;\n    console.log(loading);\n\n    if (!authorized) {\n      return React.createElement(Auth, {\n        authEvent: this.authEvent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 0,\n      style: {\n        height: height\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      style: {\n        height: \"8%\",\n        backgroundColor: \"#ffffff\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"weFantastic\",\n      src: logo,\n      style: {\n        width: \"160px\",\n        marginTop: \"10px\",\n        marginLeft: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginTop: \"8px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(CSVReader, {\n      cssClass: \"csv-reader-input\",\n      label: \"+ Add New Csv File\",\n      onFileLoaded: this.uploadCsv,\n      onError: this.handleDarkSideForce,\n      inputId: \"csv\",\n      inputStyle: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      container: true,\n      style: {\n        height: \"92%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      style: {\n        height: \"10%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(SearchComponent, {\n      searchEvent: this.searchEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      container: true,\n      className: classes.csvContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(List, {\n      component: \"nav\",\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, this.renderCsvItems()))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      className: classes.rhsMain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, loading && React.createElement(\"div\", {\n      style: {\n        position: \"absolute\",\n        textAlign: \"center\",\n        left: \"55%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      className: classes.progress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    })), React.createElement(Csv, {\n      csvHeader: csvHeader,\n      csvData: csvData,\n      putDataToDB: this.putDataToDB,\n      deleteFromDB: this.deleteFromDB,\n      updateDB: this.updateDB,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default withStyles(styles)(Cms);","map":{"version":3,"sources":["/Users/barinozmen/CsvAnalyzer/front-end/src/pages/Cms.js"],"names":["React","Component","withStyles","Grid","CircularProgress","Csv","makeCsvData","CSVReader","logo","SearchComponent","Auth","ListItem","List","axios","moment","baseUrl","username","password","styles","theme","root","flexGrow","overflow","menu","backgroundColor","height","rhsHeader","alignItems","display","marginLeft","fontSize","fontWeight","fontStyle","fontStretch","lineHeight","letterSpacing","color","rhsMain","padding","menuHeaderText","menuListItem","csvListItem","csvContainer","listItem","width","margin","WebkitLineClamp","WebkitBoxOrient","textOverflow","progress","Cms","constructor","props","getDataFromDb","key","csvList","state","setState","loading","csvData","csvHeader","console","log","unix","fetch","then","data","json","res","body","columns","csvName","name","putDataToDB","searchQuery","currentIds","map","id","idToBeAdded","includes","post","response","getCsvListFromDb","catch","err","text","deleteFromDB","selectedItem","updateDB","idToUpdate","updateToApply","objIdToUpdate","forEach","dat","_id","update","uploadCsv","event","accessors","csvBody","i","length","headerElement","Header","accessor","filterable","filterMethod","filter","row","startsWith","value","push","tempArray","j","searchEvent","authEvent","str1","str2","localStorage","setItem","authorized","token","window","alert","onSelectMenuItem","renderCsvItems","classes","item","csvItem","substring","filterMethodString","intervalIsSet","idToDelete","objectToUpdate","modalOpen","componentDidMount","resizeEvent","addEventListener","getItem","componentWillUnmount","clearInterval","handleDarkSideForce","innerHeight","render","marginTop","position","textAlign","left"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { Grid, CircularProgress } from \"@material-ui/core/es\";\nimport Csv from \"../components/Csv\";\nimport { makeCsvData } from \"../utils/Utils\";\nimport CSVReader from \"react-csv-reader\";\nimport logo from \"../assets/images/wpwflogo.png\";\nimport SearchComponent from \"../components/SearchComponent\";\nimport Auth from \"../components/Auth\";\nimport { ListItem, List } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nconst baseUrl = \"http://localhost:3001/api/\";\nconst username = \"5342745714\";\nconst password = \"password\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    overflow: \"hidden\"\n  },\n  menu: {\n    backgroundColor: \"#ffffff\",\n    height: \"100%\"\n  },\n  rhsHeader: {\n    backgroundColor: \"#ffffff\",\n    height: \"100%\",\n    alignItems: \"center\",\n    display: \"flex\",\n    marginLeft: \"40px\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n    fontStyle: \"normal\",\n    fontStretch: \"normal\",\n    lineHeight: \"0.92\",\n    letterSpacing: \"1px\",\n    color: \"#ffffff\"\n  },\n  rhsMain: {\n    backgroundColor: \"#f4f4f4\",\n    padding: 30,\n    height: \"100%\",\n    overflow: \"auto\"\n  },\n  menuHeaderText: {\n    color: \"#ffffff\",\n    height: \"100%\",\n    alignItems: \"center\",\n    display: \"flex\",\n    marginLeft: \"40px\",\n    fontSize: \"18px\",\n    fontWeight: \"normal\",\n    fontStyle: \"normal\",\n    fontStretch: \"normal\",\n    lineHeight: \"normal\"\n  },\n  menuListItem: {\n    height: \"92%\"\n  },\n  csvListItem: {\n    height: \"45px\"\n  },\n  csvContainer: {\n    height: \"90%\",\n    overflow: \"auto\"\n  },\n  listItem: {\n    fontSize: \"16px\",\n    display: \"-webkit-box\",\n    width: \"100%\",\n    margin: \"0 auto\",\n    WebkitLineClamp: \"2\",\n    WebkitBoxOrient: \"vertical\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\"\n  },\n  progress: {}\n});\n\nclass Cms extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      height: null,\n      csvHeader: null,\n      csvData: null,\n      filterMethodString: \"Starts With\",\n      filterMethod: 0,\n      searchQuery: \"\",\n      selectedItem: null,\n      csvList: [],\n      csvName: null,\n      id: 0,\n      csvName: null,\n      intervalIsSet: false,\n      idToDelete: null,\n      idToUpdate: null,\n      objectToUpdate: null,\n      modalOpen: false,\n      loading: false,\n      authorized: false,\n      token: \"\"\n    };\n  }\n\n  getDataFromDb = key => {\n    const { csvList } = this.state;\n\n    this.setState({ loading: true, csvData: null, csvHeader: null });\n\n    console.log(moment().unix());\n\n    fetch(`${baseUrl}getData?name=${csvList[key]}`)\n      .then(data => data.json())\n      .then(res => {\n        this.setState({\n          csvData: res.data.data.body,\n          csvHeader: res.data.data.columns,\n          csvName: res.data.data.name,\n          loading: false\n        });\n      });\n  };\n\n  // our put method that uses our backend api\n  // to create new query into our data base\n  putDataToDB = (csvName, csvData, csvHeader) => {\n    const { csvList, searchQuery } = this.state;\n\n    let currentIds = csvList.map(data => data.id);\n    let idToBeAdded = 0;\n    while (currentIds.includes(idToBeAdded)) {\n      ++idToBeAdded;\n    }\n\n    this.setState({ loading: true });\n\n    axios\n      .post(`${baseUrl}putData`, {\n        id: idToBeAdded,\n        name: csvName,\n        columns: csvHeader,\n        body: csvData\n      })\n      .then(response => {\n        this.getCsvListFromDb(searchQuery);\n        this.setState({ loading: false });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  getCsvListFromDb = text => {\n    fetch(`${baseUrl}listData?query=${text}`)\n      .then(data => data.json())\n      .then(res => {\n        this.setState({ csvList: res.data });\n      });\n  };\n\n  // our delete method that uses our backend api\n  // to remove existing database information\n  deleteFromDB = () => {\n    const { csvName, searchQuery } = this.state;\n\n    this.setState({ loading: true });\n\n    fetch(`${baseUrl}deleteData?name=${csvName}`)\n      .then(response => {\n        this.getCsvListFromDb(searchQuery);\n        this.setState({\n          loading: false,\n          selectedItem: null,\n          csvData: null,\n          csvHeader: null\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  // our update method that uses our backend api\n  // to overwrite existing data base information\n  updateDB = (idToUpdate, updateToApply) => {\n    const { csvList } = this.state;\n\n    let objIdToUpdate = null;\n    csvList.forEach(dat => {\n      if (dat.id === idToUpdate) {\n        objIdToUpdate = dat._id;\n      }\n    });\n\n    axios.post(`${baseUrl}updateData`, {\n      id: objIdToUpdate,\n      update: { csvName: updateToApply }\n    });\n  };\n\n  componentDidMount() {\n    const { searchQuery } = this.state;\n    this.resizeEvent();\n    window.addEventListener(\"resize\", () => this.resizeEvent());\n\n    if (\n      localStorage.getItem(\"username\") === username &&\n      localStorage.getItem(\"password\") === password\n    ) {\n      this.setState({\n        authorized: true,\n        token:\n          localStorage.getItem(\"username\") + localStorage.getItem(\"password\")\n      });\n    }\n\n    this.getCsvListFromDb(searchQuery);\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n    }\n  }\n\n  uploadCsv = event => {\n    if (!event) {\n      return;\n    }\n\n    let columns = [];\n    let accessors = [];\n    let csvBody = [];\n\n    for (let i = 0; i < event[0].length; i++) {\n      let headerElement = {\n        Header: event[0][i],\n        accessor: event[0][i],\n        filterable: true,\n        filterMethod: (filter, row) =>\n          // row[filter.id].endsWith(filter.value) &&\n          row[filter.id].startsWith(filter.value)\n      };\n      columns.push(headerElement);\n      accessors.push(event[0][i]);\n    }\n\n    for (let i = 1; i < event.length; i++) {\n      let tempArray = [];\n      for (let j = 0; j < event[0].length; j++) {\n        tempArray.push(event[i][j]);\n      }\n      csvBody.push(tempArray);\n    }\n\n    this.setState({\n      csvHeader: columns,\n      csvData: makeCsvData(csvBody, accessors),\n      loading: false,\n      selectedItem: null\n    });\n  };\n\n  handleDarkSideForce() {\n    console.log(\"DARKSIDE\");\n  }\n\n  searchEvent = text => {\n    this.setState({ searchQuery: text });\n    this.getCsvListFromDb(text);\n  };\n\n  authEvent = (str1, str2) => {\n    localStorage.setItem(\"username\", str1);\n    localStorage.setItem(\"password\", str2);\n\n    if (str1 === username && str2 === password) {\n      this.setState({ authorized: true, token: str1 + str2 });\n    } else {\n      window.alert(\"Wrong Credentials\");\n    }\n  };\n\n  resizeEvent() {\n    this.setState({ height: window.innerHeight });\n  }\n\n  onSelectMenuItem = key => {\n    this.setState({ selectedItem: key });\n    this.getDataFromDb(key);\n  };\n\n  renderCsvItems = () => {\n    const { classes } = this.props;\n    const { selectedItem, csvList } = this.state;\n\n    return csvList.map((item, i) => {\n      let csvItem = item.substring(0, item.length - 5);\n      return (\n        <ListItem\n          selected={selectedItem === i ? true : false}\n          divider\n          key={i}\n          className={classes.csvListItem}\n          onClick={() => this.onSelectMenuItem(i)}\n        >\n          <div className={classes.listItem}>{csvItem}</div>\n        </ListItem>\n      );\n    });\n  };\n\n  render() {\n    const { height, csvHeader, csvData, loading, authorized } = this.state;\n    const { classes } = this.props;\n\n    console.log(loading);\n\n    if (!authorized) {\n      return <Auth authEvent={this.authEvent} />;\n    }\n\n    return (\n      <div className={classes.root}>\n        <Grid container spacing={0} style={{ height: height }}>\n          <Grid container style={{ height: \"8%\", backgroundColor: \"#ffffff\" }}>\n            <Grid item xs={4}>\n              <div>\n                <img\n                  alt=\"weFantastic\"\n                  src={logo}\n                  style={{\n                    width: \"160px\",\n                    marginTop: \"10px\",\n                    marginLeft: \"40px\"\n                  }}\n                />\n              </div>\n            </Grid>\n            <Grid item xs={6} />\n            <Grid item xs={2}>\n              <div style={{ marginTop: \"8px\" }}>\n                <CSVReader\n                  cssClass=\"csv-reader-input\"\n                  label=\"+ Add New Csv File\"\n                  onFileLoaded={this.uploadCsv}\n                  onError={this.handleDarkSideForce}\n                  inputId=\"csv\"\n                  inputStyle={{ color: \"red\" }}\n                />\n              </div>\n            </Grid>\n          </Grid>\n          <Grid container style={{ height: \"92%\" }}>\n            <Grid item xs={2} style={{ height: \"100%\" }}>\n              <Grid container style={{ height: \"10%\" }}>\n                <SearchComponent searchEvent={this.searchEvent} />\n              </Grid>\n              <Grid container className={classes.csvContainer}>\n                <List component=\"nav\" style={{ width: \"100%\" }}>\n                  {this.renderCsvItems()}\n                </List>\n              </Grid>\n            </Grid>\n            <Grid item xs={10} className={classes.rhsMain}>\n              {loading && (\n                <div\n                  style={{\n                    position: \"absolute\",\n                    textAlign: \"center\",\n                    left: \"55%\"\n                  }}\n                >\n                  <CircularProgress className={classes.progress} />\n                </div>\n              )}\n              <Csv\n                csvHeader={csvHeader}\n                csvData={csvData}\n                putDataToDB={this.putDataToDB}\n                deleteFromDB={this.deleteFromDB}\n                updateDB={this.updateDB}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Cms);\n"]},"metadata":{},"sourceType":"module"}