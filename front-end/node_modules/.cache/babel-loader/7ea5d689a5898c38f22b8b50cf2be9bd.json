{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    width: 36,\n    height: 36,\n    fontSize: theme.typography.pxToRem(18),\n    marginRight: 4\n  },\n\n  /* Styles applied to the root element when. */\n  alignItemsFlexStart: {\n    marginTop: 4\n  },\n\n  /* Styles applied to the children – typically the `Avatar` component. */\n  icon: {\n    width: 20,\n    height: 20,\n    fontSize: theme.typography.pxToRem(20)\n  }\n});\n/**\n * This is a simple wrapper to apply the `dense`\n * and `align-items=\"flex-start\"` mode styles to `Avatar`.\n */\n\nfunction ListItemAvatar(props) {\n  const children = props.children,\n        classes = props.classes,\n        className = props.className,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\"]);\n\n  return React.createElement(ListContext.Consumer, null, context => React.cloneElement(children, _extends({\n    className: classNames({\n      [classes.root]: context.dense,\n      [classes.alignItemsFlexStart]: context.alignItems === 'flex-start'\n    }, className, children.props.className),\n    childrenClassName: classNames({\n      [classes.icon]: context.dense\n    }, children.props.childrenClassName)\n  }, other)));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  /**\n   * The content of the component – normally `Avatar`.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nListItemAvatar.muiName = 'ListItemAvatar';\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","map":null,"metadata":{},"sourceType":"module"}